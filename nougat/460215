format 76
"hardware" // nougat_src::frameworks::include::media::hardware
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "d:/Workspace/AndroidSourceCode/nougat_src/frameworks/native/include/media/hardware/"
  cpp_src_dir "d:/Workspace/AndroidSourceCode/nougat_src/frameworks/native/include/media/hardware/"
  cpp_namespace "android"
  classview 411703 "hardware"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 4376247 "CryptoFactory"
      abstract visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 45704503 "CryptoFactory"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 45704631 "~CryptoFactory"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 45704759 "isCryptoSchemeSupported"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "uuid" explicit_type "uint8_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}[16]${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 45704887 "createPlugin"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 4
	  param in name "uuid" explicit_type "uint8_t"
	  param in name "data" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	  param inout name "plugin" type class_ref 4376375 // CryptoPlugin
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} ${p0}[16]${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 45705015 "CryptoFactory"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 4376247 // CryptoFactory
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 45705143 "operator ="
	private return_type class_ref 4376247 // CryptoFactory
	nparams 1
	  param in name "" type class_ref 4376247 // CryptoFactory
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 4376375 "CryptoPlugin"
      abstract visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      class 4376503 "Mode"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13824823 "kMode_Unencrypted"
	  public type class_ref 4376503 // Mode
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13824951 "kMode_AES_CTR"
	  public type class_ref 4376503 // Mode
	  init_value " 1"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13825079 "kMode_AES_WV"
	  public type class_ref 4376503 // Mode
	  init_value " 2"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13825207 "kMode_AES_CBC"
	  public type class_ref 4376503 // Mode
	  init_value " 3"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 4376631 "SubSample"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13825335 "mNumBytesOfClearData"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13825463 "mNumBytesOfEncryptedData"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 4376759 "Pattern"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13825591 "mEncryptBlocks"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Number of blocks to be encrypted in the pattern. If zero, pattern
 encryption is inoperative."
	end

	attribute 13825719 "mSkipBlocks"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " Number of blocks to be skipped (left clear) in the pattern. If zero,
 pattern encryption is inoperative."
	end
      end

      operation 45705271 "CryptoPlugin"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 45705399 "~CryptoPlugin"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 45705527 "requiresSecureDecoderComponent"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "mime" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If this method returns false, a non-secure decoder will be used to
 decode the data after decryption. The decrypt API below will have
 to support insecure decryption of the data (secure = false) for
 media data of the given mime type."
      end

      operation 45705655 "notifyResolution"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "" explicit_type "uint32_t"
	  param in name "" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " To implement resolution constraints, the crypto plugin needs to know
 the resolution of the video being decrypted.  The media player should
 call this method when the resolution is determined and any time it
 is subsequently changed."
      end

      operation 45705783 "setMediaDrmSession"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 1
	  param in name "" explicit_type "Vector<uint8_t>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        return ERROR_UNSUPPORTED;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " A MediaDrm session may be associated with a MediaCrypto session.  The
 associated MediaDrm session is used to load decryption keys
 into the crypto/drm plugin.  The keys are then referenced by key-id
 in the 'key' parameter to the decrypt() method.
 Should return NO_ERROR on success, ERROR_DRM_SESSION_NOT_OPENED if
 the session is not opened and a code from MediaErrors.h otherwise."
      end

      operation 45705911 "decrypt"
	abstract cpp_virtual public explicit_return_type "ssize_t"
	nparams 10
	  param in name "secure" explicit_type "bool"
	  param in name "key" explicit_type "uint8_t"
	  param in name "iv" explicit_type "uint8_t"
	  param in name "mode" type class_ref 4376503 // Mode
	  param in name "pattern" type class_ref 4376759 // Pattern
	  param in name "srcPtr" explicit_type "void"
	  param in name "subSamples" type class_ref 4376631 // SubSample
	  param in name "numSubSamples" explicit_type "size_t"
	  param inout name "dstPtr" explicit_type "void"
	  param inout name "errorDetailMsg" explicit_type "AString"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, const ${t1} ${p1}[16]${v1}, const ${t2} ${p2}[16]${v2}, ${t3} ${p3}${v3}, const ${t4} & ${p4}${v4}, const ${t5} * ${p5}${v5}, const ${t6} * ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} * ${p8}${v8}, ${t9} * ${p9}${v9}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " If the error returned falls into the range
 ERROR_DRM_VENDOR_MIN..ERROR_DRM_VENDOR_MAX, errorDetailMsg should be
 filled in with an appropriate string.
 At the java level these special errors will then trigger a
 MediaCodec.CryptoException that gives clients access to both
 the error code and the errorDetailMsg.
 Returns a non-negative result to indicate the number of bytes written
 to the dstPtr, or a negative result to indicate an error."
      end

      operation 45706039 "CryptoPlugin"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 4376375 // CryptoPlugin
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 45706167 "operator ="
	private return_type class_ref 4376375 // CryptoPlugin
	nparams 1
	  param in name "" type class_ref 4376375 // CryptoPlugin
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 4376887 "EnableAndroidNativeBuffersParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " This structure is used to enable Android native buffer use for either
 graphic buffers or secure buffers.

 TO CONTROL ANDROID GRAPHIC BUFFER USAGE:

 A pointer to this struct is passed to the OMX_SetParameter when the extension
 index for the 'OMX.google.android.index.enableAndroidNativeBuffers' extension
 is given.

 When Android native buffer use is disabled for a port (the default state),
 the OMX node should operate as normal, and expect UseBuffer calls to set its
 buffers.  This is the mode that will be used when CPU access to the buffer is
 required.

 When Android native buffer use has been enabled for a given port, the video
 color format for the port is to be interpreted as an Android pixel format
 rather than an OMX color format.  Enabling Android native buffers may also
 change how the component receives the native buffers.  If store-metadata-mode
 is enabled on the port, the component will receive the buffers as specified
 in the section below. Otherwise, unless the node supports the
 'OMX.google.android.index.useAndroidNativeBuffer2' extension, it should
 expect to receive UseAndroidNativeBuffer calls (via OMX_SetParameter) rather
 than UseBuffer calls for that port.

 TO CONTROL ANDROID SECURE BUFFER USAGE:

 A pointer to this struct is passed to the OMX_SetParameter when the extension
 index for the 'OMX.google.android.index.allocateNativeHandle' extension
 is given.

 When native handle use is disabled for a port (the default state),
 the OMX node should operate as normal, and expect AllocateBuffer calls to
 return buffer pointers. This is the mode that will be used for non-secure
 buffers if component requires allocate buffers instead of use buffers.

 When native handle use has been enabled for a given port, the component
 shall allocate native_buffer_t objects containing  that can be passed between
 processes using binder. This is the mode that will be used for secure buffers.
 When an OMX component allocates native handle for buffers, it must close and
 delete that handle when it frees those buffers. Even though pBuffer will point
 to a native handle, nFilledLength, nAllocLength and nOffset will correspond
 to the data inside the opaque buffer."
      classrelation 12301879 // nSize (<directional composition>)
	relation 12300855 *-->
	  a role_name "nSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12301879 // nSize (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12302007 // nVersion (<directional composition>)
	relation 12300983 *-->
	  a role_name "nVersion" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12302007 // nVersion (<directional composition>)
	  b parent class_ref 4377143 // OMX_VERSIONTYPE
      end

      classrelation 12302135 // nPortIndex (<directional composition>)
	relation 12301111 *-->
	  a role_name "nPortIndex" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12302135 // nPortIndex (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12302263 // enable (<directional composition>)
	relation 12301239 *-->
	  a role_name "enable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12302263 // enable (<directional composition>)
	  b parent class_ref 4377271 // OMX_BOOL
      end
    end

    class 4377399 "AllocateNativeHandleParams"
      visibility package stereotype "typedef" base_type class_ref 4376887 // EnableAndroidNativeBuffersParams
      cpp_decl "${comment}typedef struct ${type} ${name};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 12302391 // <dependency>
	relation 12301367 -_->
	  a default
	    cpp default "#include in source"
	    classrelation_ref 12302391 // <dependency>
	  b parent class_ref 4376887 // EnableAndroidNativeBuffersParams
      end
    end

    class 4377527 "StoreMetaDataInBuffersParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A pointer to this struct is passed to OMX_SetParameter() when the extension index
 \"OMX.google.android.index.storeMetaDataInBuffers\" or
 \"OMX.google.android.index.storeANWBufferInMetadata\" is given.

 When meta data is stored in the video buffers passed between OMX clients
 and OMX components, interpretation of the buffer data is up to the
 buffer receiver, and the data may or may not be the actual video data, but
 some information helpful for the receiver to locate the actual data.
 The buffer receiver thus needs to know how to interpret what is stored
 in these buffers, with mechanisms pre-determined externally. How to
 interpret the meta data is outside of the scope of this parameter.

 Currently, this is used to pass meta data from video source (camera component, for instance) to
 video encoder to avoid memcpying of input video frame data, as well as to pass dynamic output
 buffer to video decoder. To do this, bStoreMetaData is set to OMX_TRUE.

 If bStoreMetaData is set to false, real YUV frame data will be stored in input buffers, and
 the output buffers contain either real YUV frame data, or are themselves native handles as
 directed by enable/use-android-native-buffer parameter settings.
 In addition, if no OMX_SetParameter() call is made on a port with the corresponding extension
 index, the component should not assume that the client is not using metadata mode for the port.

 If the component supports this using the \"OMX.google.android.index.storeANWBufferInMetadata\"
 extension and bStoreMetaData is set to OMX_TRUE, data is passed using the VideoNativeMetadata
 layout as defined below. Each buffer will be accompanied by a fence. The fence must signal
 before the buffer can be used (e.g. read from or written into). When returning such buffer to
 the client, component must provide a new fence that must signal before the returned buffer can
 be used (e.g. read from or written into). The component owns the incoming fenceFd, and must close
 it when fence has signaled. The client will own and close the returned fence file descriptor.

 If the component supports this using the \"OMX.google.android.index.storeMetaDataInBuffers\"
 extension and bStoreMetaData is set to OMX_TRUE, data is passed using VideoGrallocMetadata
 (the layout of which is the VideoGrallocMetadata defined below). Camera input can be also passed
 as \"CameraSource\", the layout of which is vendor dependent.

 Metadata buffers are registered with the component using UseBuffer calls, or can be allocated
 by the component for encoder-metadata-output buffers."
      classrelation 12302519 // nSize (<directional composition>)
	relation 12301495 *-->
	  a role_name "nSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12302519 // nSize (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12302647 // nVersion (<directional composition>)
	relation 12301623 *-->
	  a role_name "nVersion" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12302647 // nVersion (<directional composition>)
	  b parent class_ref 4377143 // OMX_VERSIONTYPE
      end

      classrelation 12302775 // nPortIndex (<directional composition>)
	relation 12301751 *-->
	  a role_name "nPortIndex" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12302775 // nPortIndex (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12302903 // bStoreMetaData (<directional composition>)
	relation 12301879 *-->
	  a role_name "bStoreMetaData" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12302903 // bStoreMetaData (<directional composition>)
	  b parent class_ref 4377271 // OMX_BOOL
      end
    end

    class 4377655 "VideoGrallocMetadata"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Meta data buffer layout used to transport output frames to the decoder for
 dynamic buffer handling."
      classrelation 12303031 // eType (<directional composition>)
	relation 12302007 *-->
	  a role_name "eType" public
	    comment " must be kMetadataBufferTypeGrallocSource"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12303031 // eType (<directional composition>)
	  b parent class_ref 4377783 // MetadataBufferType
      end

      classrelation 12303159 // pHandle (<directional composition>)
	relation 12302135 *-->
	  a role_name "pHandle" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12303159 // pHandle (<directional composition>)
	  b parent class_ref 4377911 // OMX_PTR
      end
    end

    class 4377783 "MetadataBufferType"
      visibility package stereotype "enum"
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "MetadataBufferType defines the type of the metadata buffers that
can be passed to video encoder component for encoding, via Stagefright
media recording framework. To see how to work with the metadata buffers
in media recording framework, please consult HardwareAPI.h

The creator of metadata buffers and video encoder share common knowledge
on what is actually being stored in these metadata buffers, and
how the information can be used by the video encoder component
to locate the actual pixel data as the source input for video
encoder, plus whatever other information that is necessary. Stagefright
media recording framework does not need to know anything specific about the
metadata buffers, except for receving each individual metadata buffer
as the source input, making a copy of the metadata buffer, and passing the
copy via OpenMAX API to the video encoder component.

The creator of the metadata buffers must ensure that the first
4 bytes in every metadata buffer indicates its buffer type,
and the rest of the metadata buffer contains the
actual metadata information. When a video encoder component receives
a metadata buffer, it uses the first 4 bytes in that buffer to find
out the type of the metadata buffer, and takes action appropriate
to that type of metadata buffers (for instance, locate the actual
pixel data input and then encoding the input data to produce a
compressed output buffer).

The following shows the layout of a metadata buffer,
where buffer type is a 4-byte field of MetadataBufferType,
and the payload is the metadata information.

--------------------------------------------------------------
|  buffer type  |          payload                           |
--------------------------------------------------------------
"
      attribute 13828151 "kMetadataBufferTypeCameraSource"
	public type class_ref 4377783 // MetadataBufferType
	init_value " 0"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13828279 "kMetadataBufferTypeGrallocSource"
	public type class_ref 4377783 // MetadataBufferType
	init_value " 1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13828407 "kMetadataBufferTypeANWBuffer"
	public type class_ref 4377783 // MetadataBufferType
	init_value " 2"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13828535 "kMetadataBufferTypeNativeHandleSource"
	public type class_ref 4377783 // MetadataBufferType
	init_value " 3"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13828663 "kMetadataBufferTypeInvalid"
	public type class_ref 4377783 // MetadataBufferType
	init_value " -1"
	cpp_decl "  ${name}${value},${comment}"
	java_decl "  ${@}${name}${value},${comment}"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 4378039 "VideoDecoderOutputMetaData"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Legacy name for VideoGrallocMetadata struct."
      classrelation 12303287 // <generalisation>
	relation 12302263 ---|>
	  a public
	    cpp default "${type}"
	    java "${type}"
	    classrelation_ref 12303287 // <generalisation>
	  b parent class_ref 4377655 // VideoGrallocMetadata
      end
    end

    class 4378167 "VideoNativeMetadata"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 12303415 // eType (<directional composition>)
	relation 12302391 *-->
	  a role_name "eType" public
	    comment " must be kMetadataBufferTypeANWBuffer"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12303415 // eType (<directional composition>)
	  b parent class_ref 4377783 // MetadataBufferType
      end

      classrelation 12303543 // pBuffer (<directional composition>)
	relation 12302519 *-->
	  a role_name "pBuffer" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12303543 // pBuffer (<directional composition>)
	  b parent class_ref 4377911 // OMX_PTR
      end

      attribute 13825847 "nFenceFd"
	public explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " -1 if unused"
      end
    end

    class 4378295 "VideoNativeHandleMetadata"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Meta data buffer layout for passing a native_handle to codec"
      classrelation 12303671 // eType (<directional composition>)
	relation 12302647 *-->
	  a role_name "eType" public
	    comment " must be kMetadataBufferTypeNativeHandleSource"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12303671 // eType (<directional composition>)
	  b parent class_ref 4377783 // MetadataBufferType
      end

      classrelation 12303799 // pHandle (<directional composition>)
	relation 12302775 *-->
	  a role_name "pHandle" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12303799 // pHandle (<directional composition>)
	  b parent class_ref 4377911 // OMX_PTR
      end
    end

    class 4378423 "PrepareForAdaptivePlaybackParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A pointer to this struct is passed to OMX_SetParameter() when the extension
 index \"OMX.google.android.index.prepareForAdaptivePlayback\" is given.

 This method is used to signal a video decoder, that the user has requested
 seamless resolution change support (if bEnable is set to OMX_TRUE).
 nMaxFrameWidth and nMaxFrameHeight are the dimensions of the largest
 anticipated frames in the video.  If bEnable is OMX_FALSE, no resolution
 change is expected, and the nMaxFrameWidth/Height fields are unused.

 If the decoder supports dynamic output buffers, it may ignore this
 request.  Otherwise, it shall request resources in such a way so that it
 avoids full port-reconfiguration (due to output port-definition change)
 during resolution changes.

 DO NOT USE THIS STRUCTURE AS IT WILL BE REMOVED.  INSTEAD, IMPLEMENT
 METADATA SUPPORT FOR VIDEO DECODERS."
      classrelation 12303927 // nSize (<directional composition>)
	relation 12302903 *-->
	  a role_name "nSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12303927 // nSize (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12304055 // nVersion (<directional composition>)
	relation 12303031 *-->
	  a role_name "nVersion" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12304055 // nVersion (<directional composition>)
	  b parent class_ref 4377143 // OMX_VERSIONTYPE
      end

      classrelation 12304183 // nPortIndex (<directional composition>)
	relation 12303159 *-->
	  a role_name "nPortIndex" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12304183 // nPortIndex (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12304311 // bEnable (<directional composition>)
	relation 12303287 *-->
	  a role_name "bEnable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12304311 // bEnable (<directional composition>)
	  b parent class_ref 4377271 // OMX_BOOL
      end

      classrelation 12304439 // nMaxFrameWidth (<directional composition>)
	relation 12303415 *-->
	  a role_name "nMaxFrameWidth" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12304439 // nMaxFrameWidth (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12304567 // nMaxFrameHeight (<directional composition>)
	relation 12303543 *-->
	  a role_name "nMaxFrameHeight" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12304567 // nMaxFrameHeight (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end
    end

    class 4378551 "UseAndroidNativeBufferParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A pointer to this struct is passed to OMX_SetParameter when the extension
 index for the 'OMX.google.android.index.useAndroidNativeBuffer' extension is
 given.  This call will only be performed if a prior call was made with the
 'OMX.google.android.index.enableAndroidNativeBuffers' extension index,
 enabling use of Android native buffers."
      classrelation 12304695 // nSize (<directional composition>)
	relation 12303671 *-->
	  a role_name "nSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12304695 // nSize (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12304823 // nVersion (<directional composition>)
	relation 12303799 *-->
	  a role_name "nVersion" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12304823 // nVersion (<directional composition>)
	  b parent class_ref 4377143 // OMX_VERSIONTYPE
      end

      classrelation 12304951 // nPortIndex (<directional composition>)
	relation 12303927 *-->
	  a role_name "nPortIndex" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12304951 // nPortIndex (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12305079 // pAppPrivate (<directional composition>)
	relation 12304055 *-->
	  a role_name "pAppPrivate" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12305079 // pAppPrivate (<directional composition>)
	  b parent class_ref 4377911 // OMX_PTR
      end

      attribute 13825975 "bufferHeader"
	public type class_ref 4378679 // OMX_BUFFERHEADERTYPE
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * * ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 13826103 "nativeBuffer"
	const_attribute public explicit_type "ANativeWindowBuffer"
	stereotype "sp"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> & ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 4378807 "GetAndroidNativeBufferUsageParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " A pointer to this struct is passed to OMX_GetParameter when the extension
 index for the 'OMX.google.android.index.getAndroidNativeBufferUsage'
 extension is given.  The usage bits returned from this query will be used to
 allocate the Gralloc buffers that get passed to the useAndroidNativeBuffer
 command."
      classrelation 12305207 // nSize (<directional composition>)
	relation 12304183 *-->
	  a role_name "nSize" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12305207 // nSize (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12305335 // nVersion (<directional composition>)
	relation 12304311 *-->
	  a role_name "nVersion" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12305335 // nVersion (<directional composition>)
	  b parent class_ref 4377143 // OMX_VERSIONTYPE
      end

      classrelation 12305463 // nPortIndex (<directional composition>)
	relation 12304439 *-->
	  a role_name "nPortIndex" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12305463 // nPortIndex (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12305591 // nUsage (<directional composition>)
	relation 12304567 *-->
	  a role_name "nUsage" public
	    comment " OUT"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12305591 // nUsage (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end
    end

    class 4378935 "PrependSPSPPSToIDRFramesParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " An enum OMX_COLOR_FormatAndroidOpaque to indicate an opaque colorformat
 is declared in media/stagefright/openmax/OMX_IVCommon.h
 This will inform the encoder that the actual
 colorformat will be relayed by the GRalloc Buffers.
 OMX_COLOR_FormatAndroidOpaque  = 0x7F000001,
 A pointer to this struct is passed to OMX_SetParameter when the extension
 index for the 'OMX.google.android.index.prependSPSPPSToIDRFrames' extension
 is given.
 A successful result indicates that future IDR frames will be prefixed by
 SPS/PPS."
      classrelation 12305719 // nSize (<directional composition>)
	relation 12304695 *-->
	  a role_name "nSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12305719 // nSize (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12305847 // nVersion (<directional composition>)
	relation 12304823 *-->
	  a role_name "nVersion" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12305847 // nVersion (<directional composition>)
	  b parent class_ref 4377143 // OMX_VERSIONTYPE
      end

      classrelation 12305975 // bEnable (<directional composition>)
	relation 12304951 *-->
	  a role_name "bEnable" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12305975 // bEnable (<directional composition>)
	  b parent class_ref 4377271 // OMX_BOOL
      end
    end

    class 4379063 "DescribeColorFormatParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 12306103 // nSize (<directional composition>)
	relation 12305079 *-->
	  a role_name "nSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12306103 // nSize (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12306231 // nVersion (<directional composition>)
	relation 12305207 *-->
	  a role_name "nVersion" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12306231 // nVersion (<directional composition>)
	  b parent class_ref 4377143 // OMX_VERSIONTYPE
      end

      classrelation 12306359 // eColorFormat (<directional composition>)
	relation 12305335 *-->
	  a role_name "eColorFormat" public
	    comment " input: parameters from OMX_VIDEO_PORTDEFINITIONTYPE"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12306359 // eColorFormat (<directional composition>)
	  b parent class_ref 4379191 // OMX_COLOR_FORMATTYPE
      end

      classrelation 12306487 // nFrameWidth (<directional composition>)
	relation 12305463 *-->
	  a role_name "nFrameWidth" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12306487 // nFrameWidth (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12306615 // nFrameHeight (<directional composition>)
	relation 12305591 *-->
	  a role_name "nFrameHeight" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12306615 // nFrameHeight (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12306743 // nStride (<directional composition>)
	relation 12305719 *-->
	  a role_name "nStride" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12306743 // nStride (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12306871 // nSliceHeight (<directional composition>)
	relation 12305847 *-->
	  a role_name "nSliceHeight" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12306871 // nSliceHeight (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12306999 // bUsingNativeBuffers (<directional composition>)
	relation 12305975 *-->
	  a role_name "bUsingNativeBuffers" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12306999 // bUsingNativeBuffers (<directional composition>)
	  b parent class_ref 4377271 // OMX_BOOL
      end

      classrelation 12307127 // sMediaImage (<directional composition>)
	relation 12306103 *-->
	  a role_name "sMediaImage" public
	    comment " output: fill out the MediaImage fields"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12307127 // sMediaImage (<directional composition>)
	  b parent class_ref 4379319 // MediaImage
      end

      operation 45706295 "DescribeColorFormatParams"
	public explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 4379447 // DescribeColorFormat2Params
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end
    end

    class 4379319 "MediaImage"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "Structure describing a media image (frame)
Currently only supporting YUV
@deprecated. Use MediaImage2 instead"
      class 4381111 "Type"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13828791 "MEDIA_IMAGE_TYPE_UNKNOWN"
	  public type class_ref 4381111 // Type
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13828919 "MEDIA_IMAGE_TYPE_YUV"
	  public type class_ref 4381111 // Type
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 4381239 "PlaneIndex"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13829047 "Y"
	  public type class_ref 4381239 // PlaneIndex
	  init_value " 0"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13829175 "U"
	  public type class_ref 4381239 // PlaneIndex
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13829303 "V"
	  public type class_ref 4381239 // PlaneIndex
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13829431 "MAX_NUM_PLANES"
	  public type class_ref 4381239 // PlaneIndex
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      classrelation 12310327 // mType (<directional composition>)
	relation 12309303 *-->
	  a role_name "mType" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12310327 // mType (<directional composition>)
	  b parent class_ref 4381111 // Type
      end

      attribute 13829559 "mNumPlanes"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " number of planes"
      end

      attribute 13829687 "mWidth"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " width of largest plane (unpadded, as in nFrameWidth)"
      end

      attribute 13829815 "mHeight"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " height of largest plane (unpadded, as in nFrameHeight)"
      end

      attribute 13829943 "mBitDepth"
	public explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " useable bit depth"
      end

      class 4381367 "PlaneInfo"
	visibility package stereotype "struct"
	cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13830071 "mOffset"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " offset of first pixel of the plane in bytes"
	end

	attribute 13830199 "mColInc"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " from buffer offset
 column increment in bytes"
	end

	attribute 13830327 "mRowInc"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " row increment in bytes"
	end

	attribute 13830455 "mHorizSubsampling"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " subsampling compared to the largest plane"
	end

	attribute 13830583 "mVertSubsampling"
	  public explicit_type "uint32_t"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  comment " subsampling compared to the largest plane"
	end
      end

      classrelation 12310455 // mPlane (<directional composition>)
	relation 12309431 *-->
	  a role_name "mPlane" multiplicity "[MAX_NUM_PLANES]" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${multiplicity}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12310455 // mPlane (<directional composition>)
	  b parent class_ref 4381367 // PlaneInfo
      end
    end

    class 4379447 "DescribeColorFormat2Params"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " for internal use only
 A pointer to this struct is passed to OMX_GetParameter when the extension
 index for the 'OMX.google.android.index.describeColorFormat2'
 extension is given. This is operationally the same as DescribeColorFormatParams
 but can be used for HDR and RGBA/YUVA formats."
      classrelation 12307255 // nSize (<directional composition>)
	relation 12306231 *-->
	  a role_name "nSize" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12307255 // nSize (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12307383 // nVersion (<directional composition>)
	relation 12306359 *-->
	  a role_name "nVersion" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12307383 // nVersion (<directional composition>)
	  b parent class_ref 4377143 // OMX_VERSIONTYPE
      end

      classrelation 12307511 // eColorFormat (<directional composition>)
	relation 12306487 *-->
	  a role_name "eColorFormat" public
	    comment " input: parameters from OMX_VIDEO_PORTDEFINITIONTYPE"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12307511 // eColorFormat (<directional composition>)
	  b parent class_ref 4379191 // OMX_COLOR_FORMATTYPE
      end

      classrelation 12307639 // nFrameWidth (<directional composition>)
	relation 12306615 *-->
	  a role_name "nFrameWidth" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12307639 // nFrameWidth (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12307767 // nFrameHeight (<directional composition>)
	relation 12306743 *-->
	  a role_name "nFrameHeight" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12307767 // nFrameHeight (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12307895 // nStride (<directional composition>)
	relation 12306871 *-->
	  a role_name "nStride" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12307895 // nStride (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12308023 // nSliceHeight (<directional composition>)
	relation 12306999 *-->
	  a role_name "nSliceHeight" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12308023 // nSliceHeight (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12308151 // bUsingNativeBuffers (<directional composition>)
	relation 12307127 *-->
	  a role_name "bUsingNativeBuffers" public
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12308151 // bUsingNativeBuffers (<directional composition>)
	  b parent class_ref 4377271 // OMX_BOOL
      end

      attribute 13826231 "sMediaImage"
	public explicit_type "MediaImage2"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " output: fill out the MediaImage2 fields"
      end

      operation 45706423 "initFromV1"
	public explicit_return_type "void"
	nparams 1
	  param in name "" type class_ref 4379063 // DescribeColorFormatParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end
    end

    class 4379575 "ConfigureVideoTunnelModeParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " for internal use only
 A pointer to this struct is passed to OMX_SetParameter or OMX_GetParameter
 when the extension index for the
 'OMX.google.android.index.configureVideoTunnelMode' extension is  given.
 If the extension is supported then tunneled playback mode should be supported
 by the codec. If bTunneled is set to OMX_TRUE then the video decoder should
 operate in \"tunneled\" mode and output its decoded frames directly to the
 sink. In this case nAudioHwSync is the HW SYNC ID of the audio HAL Output
 stream to sync the video with. If bTunneled is set to OMX_FALSE, \"tunneled\"
 mode should be disabled and nAudioHwSync should be ignored.
 OMX_GetParameter is used to query tunneling configuration. bTunneled should
 return whether decoder is operating in tunneled mode, and if it is,
 pSidebandWindow should contain the codec allocated sideband window handle."
      classrelation 12308279 // nSize (<directional composition>)
	relation 12307255 *-->
	  a role_name "nSize" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12308279 // nSize (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12308407 // nVersion (<directional composition>)
	relation 12307383 *-->
	  a role_name "nVersion" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12308407 // nVersion (<directional composition>)
	  b parent class_ref 4377143 // OMX_VERSIONTYPE
      end

      classrelation 12308535 // nPortIndex (<directional composition>)
	relation 12307511 *-->
	  a role_name "nPortIndex" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12308535 // nPortIndex (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12308663 // bTunneled (<directional composition>)
	relation 12307639 *-->
	  a role_name "bTunneled" public
	    comment " IN/OUT"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12308663 // bTunneled (<directional composition>)
	  b parent class_ref 4377271 // OMX_BOOL
      end

      classrelation 12308791 // nAudioHwSync (<directional composition>)
	relation 12307767 *-->
	  a role_name "nAudioHwSync" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12308791 // nAudioHwSync (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12308919 // pSidebandWindow (<directional composition>)
	relation 12307895 *-->
	  a role_name "pSidebandWindow" public
	    comment " OUT"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12308919 // pSidebandWindow (<directional composition>)
	  b parent class_ref 4377911 // OMX_PTR
      end
    end

    class 4379703 "DescribeColorAspectsParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Color space description (aspects) parameters.
 This is passed via OMX_SetConfig or OMX_GetConfig to video encoders and decoders when the
 'OMX.google.android.index.describeColorAspects' extension is given. Component SHALL behave
 as described below if it supports this extension.

 bDataSpaceChanged and bRequestingDataSpace is assumed to be OMX_FALSE unless noted otherwise.

 VIDEO ENCODERS: the framework uses OMX_SetConfig to specify color aspects of the coded video.
 This may happen:
   a) before the component transitions to idle state
   b) before the input frame is sent via OMX_EmptyThisBuffer in executing state
   c) during execution, just before an input frame with a different color aspect information
      is sent.

 The framework also uses OMX_GetConfig to
   d) verify the color aspects that will be written to the stream
   e) (optional) verify the color aspects that should be reported to the container for a
      given dataspace/pixelformat received

 1. Encoders SHOULD maintain an internal color aspect state, initialized to Unspecified values.
    This represents the values that will be written into the bitstream.
 2. Upon OMX_SetConfig, they SHOULD update their internal state to the aspects received
    (including Unspecified values). For specific aspect values that are not supported by the
    codec standard, encoders SHOULD substitute Unspecified values; or they MAY use a suitable
    alternative (e.g. to suggest the use of BT.709 EOTF instead of SMPTE 240M.)
 3. OMX_GetConfig SHALL return the internal state (values that will be written).
 4. OMX_SetConfig SHALL always succeed before receiving the first frame. It MAY fail afterwards,
    but only if the configured values would change AND the component does not support updating the
    color information to those values mid-stream. If component supports updating a portion of
    the color information, those values should be updated in the internal state, and OMX_SetConfig
    SHALL succeed. Otherwise, the internal state SHALL remain intact and OMX_SetConfig SHALL fail
    with OMX_ErrorUnsupportedSettings.
 5. When the framework receives an input frame with an unexpected dataspace, it will query
    encoders for the color aspects that should be reported to the container using OMX_GetConfig
    with bDataSpaceChanged set to OMX_TRUE, and nPixelFormat/nDataSpace containing the new
    format/dataspace values. This allows vendors to use extended dataspace during capture and
    composition (e.g. screenrecord) - while performing color-space conversion inside the encoder -
    and encode and report a different color-space information in the bitstream/container.
    sColorAspects contains the requested color aspects by the client for reference, which may
    include aspects not supported by the encoding. This is used together with guidance for
    dataspace selection; see 6. below.

 VIDEO DECODERS: the framework uses OMX_SetConfig to specify the default color aspects to use
 for the video.
 This may happen:
   a) before the component transitions to idle state
   b) during execution, when the resolution or the default color aspects change.

 The framework also uses OMX_GetConfig to
   c) get the final color aspects reported by the coded bitstream after taking the default values
      into account.

 1. Decoders should maintain two color aspect states - the default state as reported by the
    framework, and the coded state as reported by the bitstream - as each state can change
    independently from the other.
 2. Upon OMX_SetConfig, it SHALL update its default state regardless of whether such aspects
    could be supplied by the component bitstream. (E.g. it should blindly support all enumeration
    values, even unknown ones, and the Other value). This SHALL always succeed.
 3. Upon OMX_GetConfig, the component SHALL return the final color aspects by replacing
    Unspecified coded values with the default values. This SHALL always succeed.
 4. Whenever the component processes color aspect information in the bitstream even with an
    Unspecified value, it SHOULD update its internal coded state with that information just before
    the frame with the new information would be outputted, and the component SHALL signal an
    OMX_EventPortSettingsChanged event with data2 set to the extension index.
 NOTE: Component SHOULD NOT signal a separate event purely for color aspect change, if it occurs
    together with a port definition (e.g. size) or crop change.
 5. If the aspects a component encounters in the bitstream cannot be represented with enumeration
    values as defined below, the component SHALL set those aspects to Other. Restricted values in
    the bitstream SHALL be treated as defined by the relevant bitstream specifications/standards,
    or as Unspecified, if not defined.

 BOTH DECODERS AND ENCODERS: the framework uses OMX_GetConfig during idle and executing state to
   f) (optional) get guidance for the dataspace to set for given color aspects, by setting
      bRequestingDataSpace to OMX_TRUE. The component SHALL return OMX_ErrorUnsupportedSettings
      IF it does not support this request.

 6. This is an information request that can happen at any time, independent of the normal
    configuration process. This allows vendors to use extended dataspace during capture, playback
    and composition - while performing color-space conversion inside the component. Component
    SHALL set the desired dataspace into nDataSpace. Otherwise, it SHALL return
    OMX_ErrorUnsupportedSettings to let the framework choose a nearby standard dataspace.

 6.a. For encoders, this query happens before the first frame is received using surface encoding.
    This allows the encoder to use a specific dataspace for the color aspects (e.g. because the
    device supports additional dataspaces, or because it wants to perform color-space extension
    to facilitate a more optimal rendering/capture pipeline.).

 6.b. For decoders, this query happens before the first frame, and every time the color aspects
    change, while using surface buffers. This allows the decoder to use a specific dataspace for
    the color aspects (e.g. because the device supports additional dataspaces, or because it wants
    to perform color-space extension by inline color-space conversion to facilitate a more optimal
    rendering pipeline.).

 Note: the size of sAspects may increase in the future by additional fields.
 Implementations SHOULD NOT require a certain size."
      classrelation 12309047 // nSize (<directional composition>)
	relation 12308023 *-->
	  a role_name "nSize" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12309047 // nSize (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12309175 // nVersion (<directional composition>)
	relation 12308151 *-->
	  a role_name "nVersion" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12309175 // nVersion (<directional composition>)
	  b parent class_ref 4377143 // OMX_VERSIONTYPE
      end

      classrelation 12309303 // nPortIndex (<directional composition>)
	relation 12308279 *-->
	  a role_name "nPortIndex" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12309303 // nPortIndex (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12309431 // bRequestingDataSpace (<directional composition>)
	relation 12308407 *-->
	  a role_name "bRequestingDataSpace" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12309431 // bRequestingDataSpace (<directional composition>)
	  b parent class_ref 4377271 // OMX_BOOL
      end

      classrelation 12309559 // bDataSpaceChanged (<directional composition>)
	relation 12308535 *-->
	  a role_name "bDataSpaceChanged" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12309559 // bDataSpaceChanged (<directional composition>)
	  b parent class_ref 4377271 // OMX_BOOL
      end

      classrelation 12309687 // nPixelFormat (<directional composition>)
	relation 12308663 *-->
	  a role_name "nPixelFormat" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12309687 // nPixelFormat (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12309815 // nDataSpace (<directional composition>)
	relation 12308791 *-->
	  a role_name "nDataSpace" public
	    comment " OUT"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12309815 // nDataSpace (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      attribute 13826359 "sAspects"
	public explicit_type "ColorAspects"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " IN/OUT"
      end
    end

    class 4379831 "DescribeHDRStaticInfoParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " HDR color description parameters.
 This is passed via OMX_SetConfig or OMX_GetConfig to video encoders and decoders when the
 'OMX.google.android.index.describeHDRColorInfo' extension is given and an HDR stream
 is detected.  Component SHALL behave as described below if it supports this extension.

 Currently, only Static Metadata Descriptor Type 1 support is required.

 VIDEO ENCODERS: the framework uses OMX_SetConfig to specify the HDR static information of the
 coded video.
 This may happen:
   a) before the component transitions to idle state
   b) before the input frame is sent via OMX_EmptyThisBuffer in executing state
   c) during execution, just before an input frame with a different HDR static
      information is sent.

 The framework also uses OMX_GetConfig to
   d) verify the HDR static information that will be written to the stream.

 1. Encoders SHOULD maintain an internal HDR static info data, initialized to Unspecified values.
    This represents the values that will be written into the bitstream.
 2. Upon OMX_SetConfig, they SHOULD update their internal state to the info received
    (including Unspecified values). For specific parameters that are not supported by the
    codec standard, encoders SHOULD substitute Unspecified values. NOTE: no other substitution
    is allowed.
 3. OMX_GetConfig SHALL return the internal state (values that will be written).
 4. OMX_SetConfig SHALL always succeed before receiving the first frame if the encoder is
    configured into an HDR compatible profile. It MAY fail with OMX_ErrorUnsupportedSettings error
    code if it is not configured into such a profile, OR if the configured values would change
    AND the component does not support updating the HDR static information mid-stream. If the
    component supports updating a portion of the information, those values should be updated in
    the internal state, and OMX_SetConfig SHALL succeed. Otherwise, the internal state SHALL
    remain intact.

 VIDEO DECODERS: the framework uses OMX_SetConfig to specify the default HDR static information
 to use for the video.
   a) This only happens if the client supplies this information, in which case it occurs before
      the component transitions to idle state.
   b) This may also happen subsequently if the default HDR static information changes.

 The framework also uses OMX_GetConfig to
   c) get the final HDR static information reported by the coded bitstream after taking the
      default values into account.

 1. Decoders should maintain two HDR static information structures - the default values as
    reported by the framework, and the coded values as reported by the bitstream - as each
    structure can change independently from the other.
 2. Upon OMX_SetConfig, it SHALL update its default structure regardless of whether such static
    parameters could be supplied by the component bitstream. (E.g. it should blindly support all
    parameter values, even seemingly illegal ones). This SHALL always succeed.
  Note: The descriptor ID used in sInfo may change in subsequent calls. (although for now only
    Type 1 support is required.)
 3. Upon OMX_GetConfig, the component SHALL return the final HDR static information by replacing
    Unspecified coded values with the default values. This SHALL always succeed. This may be
    provided using any supported descriptor ID (currently only Type 1) with the goal of expressing
    the most of the available static information.
 4. Whenever the component processes HDR static information in the bitstream even ones with
    Unspecified parameters, it SHOULD update its internal coded structure with that information
    just before the frame with the new information would be outputted, and the component SHALL
    signal an OMX_EventPortSettingsChanged event with data2 set to the extension index.
 NOTE: Component SHOULD NOT signal a separate event purely for HDR static info change, if it
    occurs together with a port definition (e.g. size), color aspect or crop change.
 5. If certain parameters of the HDR static information encountered in the bitstream cannot be
    represented using sInfo, the component SHALL use the closest representation.

 Note: the size of sInfo may increase in the future by supporting additional descriptor types.
 Implementations SHOULD NOT require a certain size."
      classrelation 12309943 // nSize (<directional composition>)
	relation 12308919 *-->
	  a role_name "nSize" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12309943 // nSize (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      classrelation 12310071 // nVersion (<directional composition>)
	relation 12309047 *-->
	  a role_name "nVersion" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12310071 // nVersion (<directional composition>)
	  b parent class_ref 4377143 // OMX_VERSIONTYPE
      end

      classrelation 12310199 // nPortIndex (<directional composition>)
	relation 12309175 *-->
	  a role_name "nPortIndex" public
	    comment " IN"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    java "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	    classrelation_ref 12310199 // nPortIndex (<directional composition>)
	  b parent class_ref 4377015 // OMX_U32
      end

      attribute 13826487 "sInfo"
	public explicit_type "HDRStaticInfo"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl "  ${comment}${@}${visibility}${static}${final}${transient}${volatile}${type} ${name}${value};
"
	php_decl ""
	python_decl ""
	idl_decl ""
	comment " IN/OUT"
      end
    end

    class 4379959 "HDCPModule"
      abstract visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Two different kinds of modules are covered under the same HDCPModule
 structure below, a module either implements decryption or encryption."
      class 4380087 "ObserverFunc"
	visibility package stereotype "typedef" explicit_base_type "void"
	cpp_decl "${comment}typedef ${type}(* ${name})(void *cookie, int msg, int ext1, int ext2);
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      class 4380215 "anonymous93"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13826615 "HDCP_INITIALIZATION_COMPLETE"
	  public type class_ref 4380215 // anonymous93
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13826743 "HDCP_INITIALIZATION_FAILED"
	  public type class_ref 4380215 // anonymous93
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13826871 "HDCP_SHUTDOWN_COMPLETE"
	  public type class_ref 4380215 // anonymous93
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13826999 "HDCP_SHUTDOWN_FAILED"
	  public type class_ref 4380215 // anonymous93
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13827127 "HDCP_UNAUTHENTICATED_CONNECTION"
	  public type class_ref 4380215 // anonymous93
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13827255 "HDCP_UNAUTHORIZED_CONNECTION"
	  public type class_ref 4380215 // anonymous93
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13827383 "HDCP_REVOKED_CONNECTION"
	  public type class_ref 4380215 // anonymous93
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13827511 "HDCP_TOPOLOGY_EXECEEDED"
	  public type class_ref 4380215 // anonymous93
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13827639 "HDCP_UNKNOWN_ERROR"
	  public type class_ref 4380215 // anonymous93
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13827767 "HDCP_SESSION_ESTABLISHED"
	  public type class_ref 4380215 // anonymous93
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 4380343 "anonymous94"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum  {
${items}
};
"
	java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 13827895 "HDCP_CAPS_ENCRYPT"
	  public type class_ref 4380343 // anonymous94
	  init_value " (1 << 0)"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 13828023 "HDCP_CAPS_ENCRYPT_NATIVE"
	  public type class_ref 4380343 // anonymous94
	  init_value " (1 << 1)"
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl "  ${@}${name}${value},${comment}"
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 45706551 "HDCPModule"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param inout name "cookie" explicit_type "void"
	  param in name "observerNotify" type class_ref 4380087 // ObserverFunc
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
	comment " Module can call the notification function to signal completion/failure
 of asynchronous operations (such as initialization) or out of band
 events."
      end

      operation 45706679 "~HDCPModule"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 45706807 "initAsync"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 2
	  param in name "addr" explicit_type "char"
	  param in name "port" explicit_type "uint"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ENCRYPTION: Request to setup an HDCP session with the host specified
 by addr and listening on the specified port.
 DECRYPTION: Request to setup an HDCP session, addr is the interface
 address the module should bind its socket to. port will be 0.
 The module will pick the port to listen on itself and report its choice
 in the \"ext2\" argument of the HDCP_INITIALIZATION_COMPLETE callback."
      end

      operation 45706935 "shutdownAsync"
	abstract cpp_virtual public explicit_return_type "status_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Request to shutdown the active HDCP session."
      end

      operation 45707063 "getCaps"
	cpp_virtual cpp_inline public explicit_return_type "uint32_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return HDCP_CAPS_ENCRYPT;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Returns the capability bitmask of this HDCP session."
      end

      operation 45707191 "encrypt"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 5
	  param in name "inData" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	  param in name "streamCTR" explicit_type "uint32_t"
	  param inout name "outInputCTR" explicit_type "uint64_t"
	  param inout name "outData" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        return INVALID_OPERATION;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " ENCRYPTION only:
 Encrypt data according to the HDCP spec. \"size\" bytes of data are
 available at \"inData\" (virtual address), \"size\" may not be a multiple
 of 128 bits (16 bytes). An equal number of encrypted bytes should be
 written to the buffer at \"outData\" (virtual address).
 This operation is to be synchronous, i.e. this call does not return
 until outData contains size bytes of encrypted data.
 streamCTR will be assigned by the caller (to 0 for the first PES stream,
 1 for the second and so on)
 inputCTR _will_be_maintained_by_the_callee_ for each PES stream."
      end

      operation 45707319 "encryptNative"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 6
	  param in name "buffer" explicit_type "buffer_handle_t"
	  param in name "offset" explicit_type "size_t"
	  param in name "size" explicit_type "size_t"
	  param in name "streamCTR" explicit_type "uint32_t"
	  param inout name "outInputCTR" explicit_type "uint64_t"
	  param inout name "outData" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}, ${t5} * ${p5}${v5}${)}${const}${volatile}${throw}${abstract} {
        return INVALID_OPERATION;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " Encrypt data according to the HDCP spec. \"size\" bytes of data starting
 at location \"offset\" are available in \"buffer\" (buffer handle). \"size\"
 may not be a multiple of 128 bits (16 bytes). An equal number of
 encrypted bytes should be written to the buffer at \"outData\" (virtual
 address). This operation is to be synchronous, i.e. this call does not
 return until outData contains size bytes of encrypted data.
 streamCTR will be assigned by the caller (to 0 for the first PES stream,
 1 for the second and so on)
 inputCTR _will_be_maintained_by_the_callee_ for each PES stream."
      end

      operation 45707447 "decrypt"
	cpp_virtual cpp_inline public explicit_return_type "status_t"
	nparams 5
	  param in name "inData" explicit_type "void"
	  param in name "size" explicit_type "size_t"
	  param in name "streamCTR" explicit_type "uint32_t"
	  param in name "inputCTR" explicit_type "uint64_t"
	  param inout name "outData" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} * ${p4}${v4}${)}${const}${volatile}${throw}${abstract} {
        return INVALID_OPERATION;
    };
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
	comment " DECRYPTION only:
 Decrypt data according to the HDCP spec.
 \"size\" bytes of encrypted data are available at \"inData\"
 (virtual address), \"size\" may not be a multiple of 128 bits (16 bytes).
 An equal number of decrypted bytes should be written to the buffer
 at \"outData\" (virtual address).
 This operation is to be synchronous, i.e. this call does not return
 until outData contains size bytes of decrypted data.
 Both streamCTR and inputCTR will be provided by the caller."
      end

      operation 45707575 "HDCPModule"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 4379959 // HDCPModule
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 45707703 "operator ="
	private return_type class_ref 4379959 // HDCPModule
	nparams 1
	  param in name "" type class_ref 4379959 // HDCPModule
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 4380471 "OMXPluginBase"
      abstract visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl "${comment}${@}${visibility}${final}${abstract}class ${name}${extends}${implements} {
${members}}
"
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 45707831 "OMXPluginBase"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 45707959 "~OMXPluginBase"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 45708087 "makeComponentInstance"
	abstract cpp_virtual public return_type class_ref 4380599 // OMX_ERRORTYPE
	nparams 4
	  param in name "name" explicit_type "char"
	  param in name "callbacks" type class_ref 4380727 // OMX_CALLBACKTYPE
	  param in name "appData" type class_ref 4377911 // OMX_PTR
	  param inout name "component" type class_ref 4380855 // OMX_COMPONENTTYPE
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} * * ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 45708215 "destroyComponentInstance"
	abstract cpp_virtual public return_type class_ref 4380599 // OMX_ERRORTYPE
	nparams 1
	  param inout name "component" type class_ref 4380855 // OMX_COMPONENTTYPE
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 45708343 "enumerateComponents"
	abstract cpp_virtual public return_type class_ref 4380599 // OMX_ERRORTYPE
	nparams 3
	  param in name "name" type class_ref 4380983 // OMX_STRING
	  param in name "size" explicit_type "size_t"
	  param in name "index" type class_ref 4377015 // OMX_U32
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 45708471 "getRolesOfComponent"
	abstract cpp_virtual public return_type class_ref 4380599 // OMX_ERRORTYPE
	nparams 2
	  param in name "name" explicit_type "char"
	  param inout name "roles" explicit_type "Vector<String8>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	java_def "  ${comment}${@}${visibility}${final}${static}${abstract}${synchronized}${type} ${name}${(}${)}${throws}${staticnl}{
  ${body}}
"
	
	
	
      end

      operation 45708599 "OMXPluginBase"
	private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 4380471 // OMXPluginBase
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	java_def "  ${comment}${@}${visibility}${final}${synchronized}${name}${(}${)}${throws} {
  ${body}}
"
	
	
	
      end

      operation 45708727 "operator ="
	private return_type class_ref 4380471 // OMXPluginBase
	nparams 1
	  param in name "" type class_ref 4380471 // OMXPluginBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end
  end

  deploymentview 354103 "hardware"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1877687 "CryptoAPI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 4376247 // CryptoFactory
	class_ref 4376375 // CryptoPlugin
      end
    end

    artifact 1877815 "HardwareAPI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 4376887 // EnableAndroidNativeBuffersParams
	class_ref 4377399 // AllocateNativeHandleParams
	class_ref 4377527 // StoreMetaDataInBuffersParams
	class_ref 4377655 // VideoGrallocMetadata
	class_ref 4378039 // VideoDecoderOutputMetaData
	class_ref 4378167 // VideoNativeMetadata
	class_ref 4378295 // VideoNativeHandleMetadata
	class_ref 4378423 // PrepareForAdaptivePlaybackParams
	class_ref 4378551 // UseAndroidNativeBufferParams
	class_ref 4378807 // GetAndroidNativeBufferUsageParams
	class_ref 4378935 // PrependSPSPPSToIDRFramesParams
	class_ref 4379063 // DescribeColorFormatParams
	class_ref 4379447 // DescribeColorFormat2Params
	class_ref 4379575 // ConfigureVideoTunnelModeParams
	class_ref 4379703 // DescribeColorAspectsParams
	class_ref 4379831 // DescribeHDRStaticInfoParams
      end
    end

    artifact 1877943 "HDCPAPI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 4379959 // HDCPModule
      end
    end

    artifact 1878071 "MetadataBufferType"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 4377783 // MetadataBufferType
      end
    end

    artifact 1878199 "OMXPluginBase"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 4380471 // OMXPluginBase
      end
    end

    artifact 1878327 "VideoAPI"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      java_src "${comment}
${package}
${imports}
${definition}"
      associated_classes
	class_ref 4379319 // MediaImage
      end
    end
  end
end
