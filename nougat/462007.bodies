class TriggerEventQueue
!!!3062967.java!!!	TriggerEventQueue(inout listener : TriggerEventListener, inout looper : Looper, inout manager : SystemSensorManager, inout packageName : String)
            super(looper, manager, OPERATING_MODE_NORMAL, packageName);
            mListener = listener;
!!!3063095.java!!!	addSensorEvent(inout sensor : Sensor) : void
            TriggerEvent t = new TriggerEvent(Sensor.getMaxLengthValuesArray(sensor,
                    mManager.mTargetSdkLevel));
            synchronized (mTriggerEvents) {
                mTriggerEvents.put(sensor.getHandle(), t);
            }
!!!3063223.java!!!	removeSensorEvent(inout sensor : Sensor) : void
            synchronized (mTriggerEvents) {
                mTriggerEvents.delete(sensor.getHandle());
            }
!!!3063351.java!!!	dispatchSensorEvent(in handle : int, inout values : float, in accuracy : int, in timestamp : long) : void
            final Sensor sensor = mManager.mHandleToSensor.get(handle);
            if (sensor == null) {
                // sensor disconnected
                return;
            }
            TriggerEvent t = null;
            synchronized (mTriggerEvents) {
                t = mTriggerEvents.get(handle);
            }
            if (t == null) {
                Log.e(TAG, "Error: Trigger Event is null for Sensor: " + sensor);
                return;
            }

            // Copy from the values array.
            System.arraycopy(values, 0, t.values, 0, t.values.length);
            t.timestamp = timestamp;
            t.sensor = sensor;

            // A trigger sensor is auto disabled. So just clean up and don't call native
            // disable.
            mManager.cancelTriggerSensorImpl(mListener, sensor, false);

            mListener.onTrigger(t);
