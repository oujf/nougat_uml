format 76
"rawbu" // nougat_src::frameworks::native::cmds::rawbu::rawbu
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "d:/Workspace/AndroidSourceCode/nougat_src/frameworks/native/cmds/rawbu/"
  cpp_src_dir "d:/Workspace/AndroidSourceCode/nougat_src/frameworks/native/cmds/rawbu/"
  deploymentview 361015 "rawbu"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1903543 "main"
      stereotype "source"
      cpp_src "// namespace android 

int main(int argc, char **argv)
{
    int restore = 0;

    if (getuid() != AID_ROOT) {
        fprintf(stderr, \"error -- %s must run as root\\n\", argv[0]);
        exit(-1);
    }
    
    if (argc < 2) {
        fprintf(stderr, \"No command specified.\\n\");
        android::show_help(argv[0]);
        exit(-1);
    }

    if (0 == strcmp(argv[1], \"restore\")) {
        restore = 1;
    } else if (0 == strcmp(argv[1], \"help\")) {
        android::show_help(argv[0]);
        exit(0);
    } else if (0 != strcmp(argv[1], \"backup\")) {
        fprintf(stderr, \"Unknown command: %s\\n\", argv[1]);
        android::show_help(argv[0]);
        exit(-1);
    }

    android::opt_backupAll = 0;
                
    optind = 2;
    
    for (;;) {
        int ret;

        ret = getopt(argc, argv, \"ah\");

        if (ret < 0) {
            break;
        }

        switch(ret) {
            case 'a':
                android::opt_backupAll = 1;
                if (restore) fprintf(stderr, \"Warning: -a option ignored on restore\\n\");
                break;
            case 'h':
                android::show_help(argv[0]);
                exit(0);
            break;

            default:
                fprintf(stderr,\"Unrecognized Option\\n\");
                android::show_help(argv[0]);
                exit(-1);
            break;
        }
    }

    const char* backupFile = \"/sdcard/backup.dat\";
    
    if (argc > optind) {
        backupFile = argv[optind];
        optind++;
        if (argc != optind) {
            fprintf(stderr, \"Too many arguments\\n\");
            android::show_help(argv[0]);
            exit(-1);
        }
    }
    
    printf(\"Stopping system...\\n\");
    property_set(\"ctl.stop\", \"runtime\");
    property_set(\"ctl.stop\", \"zygote\");
    sleep(1);
    
    int res;
    if (restore) {
        res = android::restore_data(backupFile);
        if (res != 0) {
            // Don't restart system, since the data partition is hosed.
            return res;
        }
        printf(\"Restore complete!  Restarting system, cross your fingers...\\n\");
    } else {
        res = android::backup_data(backupFile);
        if (res == 0) {
            printf(\"Backup complete!  Restarting system...\\n\");
        } else {
            printf(\"Restarting system...\\n\");
        }
    }
    
    property_set(\"ctl.start\", \"zygote\");
    property_set(\"ctl.start\", \"runtime\");
}
"
      associated_classes
      end
    end
  end
end
