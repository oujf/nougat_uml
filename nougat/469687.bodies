class HandlerDispatcher
!!!3092279.java!!!	HandlerDispatcher(inout dispatchTarget : Dispatchable, inout handler : Handler)
        mDispatchTarget = checkNotNull(dispatchTarget, "dispatchTarget must not be null");
        mHandler = checkNotNull(handler, "handler must not be null");
!!!3092407.java!!!	dispatch(in method : Method, in args : Object) : Object
        mHandler.post(new Runnable() {
            @Override
            public void run() {
                try {
                    mDispatchTarget.dispatch(method, args);
                } catch (InvocationTargetException e) {
                    Throwable t = e.getTargetException();
                    // Potential UB. Hopefully 't' is a runtime exception.
                    UncheckedThrow.throwAnyException(t);
                } catch (IllegalAccessException e) {
                    // Impossible
                    Log.wtf(TAG, "IllegalAccessException while invoking " + method, e);
                } catch (IllegalArgumentException e) {
                    // Impossible
                    Log.wtf(TAG, "IllegalArgumentException while invoking " + method, e);
                } catch (Throwable e) {
                    UncheckedThrow.throwAnyException(e);
                }
            }
        });

        // TODO handle primitive return values that would avoid NPE if unboxed
        return null;
