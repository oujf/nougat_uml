class OutputConfiguration
!!!3204279.java!!!	OutputConfiguration(inout surface : Surface)
        this(SURFACE_GROUP_ID_NONE, surface, ROTATION_0);
!!!3204407.java!!!	OutputConfiguration(in surfaceGroupId : int, inout surface : Surface)
        this(surfaceGroupId, surface, ROTATION_0);
!!!3204535.java!!!	OutputConfiguration(inout surface : Surface, in rotation : int)
        this(SURFACE_GROUP_ID_NONE, surface, rotation);
!!!3204663.java!!!	OutputConfiguration(in surfaceGroupId : int, inout surface : Surface, in rotation : int)
        checkNotNull(surface, "Surface must not be null");
        checkArgumentInRange(rotation, ROTATION_0, ROTATION_270, "Rotation constant");
        mSurfaceGroupId = surfaceGroupId;
        mSurface = surface;
        mRotation = rotation;
        mConfiguredSize = SurfaceUtils.getSurfaceSize(surface);
        mConfiguredFormat = SurfaceUtils.getSurfaceFormat(surface);
        mConfiguredDataspace = SurfaceUtils.getSurfaceDataspace(surface);
        mConfiguredGenerationId = surface.getGenerationId();
!!!3204791.java!!!	OutputConfiguration(inout other : OutputConfiguration)
        if (other == null) {
            throw new IllegalArgumentException("OutputConfiguration shouldn't be null");
        }

        this.mSurface = other.mSurface;
        this.mRotation = other.mRotation;
        this.mSurfaceGroupId = other.mSurfaceGroupId;
        this.mConfiguredDataspace = other.mConfiguredDataspace;
        this.mConfiguredFormat = other.mConfiguredFormat;
        this.mConfiguredSize = other.mConfiguredSize;
        this.mConfiguredGenerationId = other.mConfiguredGenerationId;
!!!3204919.java!!!	OutputConfiguration(inout source : Parcel)
        int rotation = source.readInt();
        int surfaceSetId = source.readInt();
        Surface surface = Surface.CREATOR.createFromParcel(source);
        checkNotNull(surface, "Surface must not be null");
        checkArgumentInRange(rotation, ROTATION_0, ROTATION_270, "Rotation constant");
        mSurfaceGroupId = surfaceSetId;
        mSurface = surface;
        mRotation = rotation;
        mConfiguredSize = SurfaceUtils.getSurfaceSize(mSurface);
        mConfiguredFormat = SurfaceUtils.getSurfaceFormat(mSurface);
        mConfiguredDataspace = SurfaceUtils.getSurfaceDataspace(mSurface);
        mConfiguredGenerationId = mSurface.getGenerationId();
!!!3205047.java!!!	getSurface() : Surface
        return mSurface;
!!!3205175.java!!!	getRotation() : int
        return mRotation;
!!!3205303.java!!!	getSurfaceGroupId() : int
        return mSurfaceGroupId;
!!!3205431.java!!!	describeContents() : int
        return 0;
!!!3205559.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        if (dest == null) {
            throw new IllegalArgumentException("dest must not be null");
        }
        dest.writeInt(mRotation);
        dest.writeInt(mSurfaceGroupId);
        mSurface.writeToParcel(dest, flags);
!!!3205687.java!!!	equals(inout obj : Object) : boolean
        if (obj == null) {
            return false;
        } else if (this == obj) {
            return true;
        } else if (obj instanceof OutputConfiguration) {
            final OutputConfiguration other = (OutputConfiguration) obj;
            return mRotation == other.mRotation &&
                   mSurface == other.mSurface &&
                   mConfiguredGenerationId == other.mConfiguredGenerationId &&
                   mConfiguredSize.equals(other.mConfiguredSize) &&
                   mConfiguredFormat == other.mConfiguredFormat &&
                   mConfiguredDataspace == other.mConfiguredDataspace &&
                   mSurfaceGroupId == other.mSurfaceGroupId;
        }
        return false;
!!!3205815.java!!!	hashCode() : int
        return HashCodeHelpers.hashCode(
            mRotation, mSurface.hashCode(), mConfiguredGenerationId,
            mConfiguredSize.hashCode(), mConfiguredFormat, mConfiguredDataspace, mSurfaceGroupId);
