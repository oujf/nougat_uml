format 76
"tests" // nougat_src::frameworks::native::services::sensorservice::tests
  revision 1
  modified_by 55 "Jeff"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default class_drawing_mode default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "d:/Workspace/AndroidSourceCode/nougat_src/frameworks/native/services/sensorservice/tests/"
  cpp_src_dir "d:/Workspace/AndroidSourceCode/nougat_src/frameworks/native/services/sensorservice/tests/"
  deploymentview 365111 "tests"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 1927479 "main"
      stereotype "source"
      cpp_src "int main()
{
    SensorManager& mgr = SensorManager::getInstanceForPackage(String16(\"Sensor Service Test\"));

    Sensor const* const* list;
    ssize_t count = mgr.getSensorList(&list);
    printf(\"numSensors=%d\\n\", int(count));

    sp<SensorEventQueue> q = mgr.createEventQueue();
    printf(\"queue=%p\\n\", q.get());

    Sensor const* accelerometer = mgr.getDefaultSensor(Sensor::TYPE_ACCELEROMETER);
    printf(\"accelerometer=%p (%s)\\n\",
            accelerometer, accelerometer->getName().string());

    sStartTime = systemTime();

    q->enableSensor(accelerometer);

    q->setEventRate(accelerometer, ms2ns(10));

    sp<Looper> loop = new Looper(false);
    loop->addFd(q->getFd(), 0, ALOOPER_EVENT_INPUT, receiver, q.get());

    do {
        //printf(\"about to poll...\\n\");
        int32_t ret = loop->pollOnce(-1);
        switch (ret) {
            case ALOOPER_POLL_WAKE:
                //(\"ALOOPER_POLL_WAKE\\n\");
                break;
            case ALOOPER_POLL_CALLBACK:
                //(\"ALOOPER_POLL_CALLBACK\\n\");
                break;
            case ALOOPER_POLL_TIMEOUT:
                printf(\"ALOOPER_POLL_TIMEOUT\\n\");
                break;
            case ALOOPER_POLL_ERROR:
                printf(\"ALOOPER_POLL_TIMEOUT\\n\");
                break;
            default:
                printf(\"ugh? poll returned %d\\n\", ret);
                break;
        }
    } while (1);


    return 0;
}
"
      associated_classes
      end
    end
  end
end
