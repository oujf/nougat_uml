class RequestHandlerThread
!!!3163575.java!!!	RequestHandlerThread(inout name : String, inout callback : Handler::Callback)
        super(name, Thread.MAX_PRIORITY);
        mCallback = callback;
!!!3163703.java!!!	onLooperPrepared() : void
        mHandler = new Handler(getLooper(), mCallback);
        mStarted.open();
!!!3163831.java!!!	waitUntilStarted() : void
        mStarted.block();
!!!3163959.java!!!	getHandler() : Handler
        return mHandler;
!!!3164087.java!!!	waitAndGetHandler() : Handler
        waitUntilStarted();
        return getHandler();
!!!3164215.java!!!	hasAnyMessages(inout what : int) : boolean
        synchronized (mHandler.getLooper().getQueue()) {
            for (int i : what) {
                if (mHandler.hasMessages(i)) {
                    return true;
                }
            }
        }
        return false;
!!!3164343.java!!!	removeMessages(inout what : int) : void
        synchronized (mHandler.getLooper().getQueue()) {
            for (int i : what) {
                mHandler.removeMessages(i);
            }
        }
!!!3164471.java!!!	waitUntilIdle() : void
        Handler handler = waitAndGetHandler();
        MessageQueue queue = handler.getLooper().getQueue();
        if (queue.isIdle()) {
            return;
        }
        mIdle.close();
        queue.addIdleHandler(mIdleHandler);
        // Ensure that the idle handler gets run even if the looper already went idle
        handler.sendEmptyMessage(MSG_POKE_IDLE_HANDLER);
        if (queue.isIdle()) {
            return;
        }
        mIdle.block();
