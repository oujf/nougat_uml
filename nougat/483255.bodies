class MarshalerReprocessFormatsMap
!!!3189943.java!!!	MarshalerReprocessFormatsMap(inout typeReference : TypeReference, in nativeType : int)
            super(MarshalQueryableReprocessFormatsMap.this, typeReference, nativeType);
!!!3190071.java!!!	marshal(inout value : ReprocessFormatsMap, inout buffer : ByteBuffer) : void
            /*
             * // writing (static example, DNG+ZSL)
             * int32_t[] contents = {
             *   RAW_OPAQUE, 3, RAW16, YUV_420_888, BLOB,
             *   RAW16, 2, YUV_420_888, BLOB,
             *   ...,
             *   INPUT_FORMAT, OUTPUT_FORMAT_COUNT, [OUTPUT_0, OUTPUT_1, ..., OUTPUT_FORMAT_COUNT-1]
             * };
             */
            int[] inputs = StreamConfigurationMap.imageFormatToInternal(value.getInputs());
            for (int input : inputs) {
                // INPUT_FORMAT
                buffer.putInt(input);

                int[] outputs =
                        StreamConfigurationMap.imageFormatToInternal(value.getOutputs(input));
                // OUTPUT_FORMAT_COUNT
                buffer.putInt(outputs.length);

                // [OUTPUT_0, OUTPUT_1, ..., OUTPUT_FORMAT_COUNT-1]
                for (int output : outputs) {
                    buffer.putInt(output);
                }
            }
!!!3190199.java!!!	unmarshal(inout buffer : ByteBuffer) : ReprocessFormatsMap
            int len = buffer.remaining() / SIZEOF_INT32;
            if (buffer.remaining() % SIZEOF_INT32 != 0) {
                throw new AssertionError("ReprocessFormatsMap was not TYPE_INT32");
            }

            int[] entries = new int[len];

            IntBuffer intBuffer = buffer.asIntBuffer();
            intBuffer.get(entries);

            // TODO: consider moving rest of parsing code from ReprocessFormatsMap to here

            return new ReprocessFormatsMap(entries);
!!!3190327.java!!!	getNativeSize() : int
            return NATIVE_SIZE_DYNAMIC;
!!!3190455.java!!!	calculateMarshalSize(inout value : ReprocessFormatsMap) : int
            /*
             * // writing (static example, DNG+ZSL)
             * int32_t[] contents = {
             *   RAW_OPAQUE, 3, RAW16, YUV_420_888, BLOB,
             *   RAW16, 2, YUV_420_888, BLOB,
             *   ...,
             *   INPUT_FORMAT, OUTPUT_FORMAT_COUNT, [OUTPUT_0, OUTPUT_1, ..., OUTPUT_FORMAT_COUNT-1]
             * };
             */
            int length = 0;

            int[] inputs = value.getInputs();
            for (int input : inputs) {

                length += 1; // INPUT_FORMAT
                length += 1; // OUTPUT_FORMAT_COUNT

                int[] outputs = value.getOutputs(input);
                length += outputs.length; // [OUTPUT_0, OUTPUT_1, ..., OUTPUT_FORMAT_COUNT-1]
            }

            return length * SIZEOF_INT32;
