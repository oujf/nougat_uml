class NanoApp
!!!3317943.java!!!	NanoApp()
        this(0, null);
        mAppIdSet = false;
!!!3318071.java!!!	NanoApp(in appId : int, inout appBinary : byte)
        mPublisher = UNKNOWN;
        mName = UNKNOWN;

        mAppId = appId;
        mAppIdSet = true;
        mAppVersion = 0;

        mNeededReadMemBytes = 0;
        mNeededWriteMemBytes = 0;
        mNeededExecMemBytes = 0;

        mNeededSensors = new int[0];
        mOutputEvents = new int[0];
        mAppBinary = appBinary;
!!!3318199.java!!!	setPublisher(inout publisher : String) : void
        mPublisher = publisher;
!!!3318327.java!!!	setName(inout name : String) : void
        mName = name;
!!!3318455.java!!!	setAppId(in appId : int) : void
        mAppId = appId;
        mAppIdSet = true;
!!!3318583.java!!!	setAppVersion(in appVersion : int) : void
        mAppVersion = appVersion;
!!!3318711.java!!!	setNeededReadMemBytes(in neededReadMemBytes : int) : void
        mNeededReadMemBytes = neededReadMemBytes;
!!!3318839.java!!!	setNeededWriteMemBytes(in neededWriteMemBytes : int) : void
        mNeededWriteMemBytes = neededWriteMemBytes;
!!!3318967.java!!!	setNeededExecMemBytes(in neededExecMemBytes : int) : void
        mNeededExecMemBytes = neededExecMemBytes;
!!!3319095.java!!!	setNeededSensors(inout neededSensors : int) : void
        mNeededSensors = neededSensors;
!!!3319223.java!!!	setOutputEvents(inout outputEvents : int) : void
        mOutputEvents = outputEvents;
!!!3319351.java!!!	setAppBinary(inout appBinary : byte) : void
        mAppBinary = appBinary;
!!!3319479.java!!!	getPublisher() : String
        return mPublisher;
!!!3319607.java!!!	getName() : String
        return mName;
!!!3319735.java!!!	getAppId() : int
        return mAppId;
!!!3319863.java!!!	getAppVersion() : int
        return mAppVersion;
!!!3319991.java!!!	getNeededReadMemBytes() : int
        return mNeededReadMemBytes;
!!!3320119.java!!!	getNeededWriteMemBytes() : int
        return mNeededWriteMemBytes;
!!!3320247.java!!!	getNeededExecMemBytes() : int
        return mNeededExecMemBytes;
!!!3320375.java!!!	getNeededSensors() : int
        return mNeededSensors;
!!!3320503.java!!!	getOutputEvents() : int
        return mOutputEvents;
!!!3320631.java!!!	getAppBinary() : byte
        return mAppBinary;
!!!3320759.java!!!	NanoApp(inout in : Parcel)
        mPublisher = in.readString();
        mName = in.readString();

        mAppId = in.readInt();
        mAppVersion = in.readInt();
        mNeededReadMemBytes = in.readInt();
        mNeededWriteMemBytes = in.readInt();
        mNeededExecMemBytes = in.readInt();

        int mNeededSensorsLength = in.readInt();
        mNeededSensors = new int[mNeededSensorsLength];
        in.readIntArray(mNeededSensors);

        int mOutputEventsLength = in.readInt();
        mOutputEvents = new int[mOutputEventsLength];
        in.readIntArray(mOutputEvents);

        int binaryLength = in.readInt();
        mAppBinary = new byte[binaryLength];
        in.readByteArray(mAppBinary);
!!!3320887.java!!!	describeContents() : int
        return 0;
!!!3321015.java!!!	writeToParcel(inout out : Parcel, in flags : int) : void
        if (mAppBinary == null) {
            throw new IllegalStateException("Must set non-null AppBinary for nanoapp " + mName);
        }
        if (!mAppIdSet) {
            throw new IllegalStateException("Must set AppId for nanoapp " + mName);
        }

        out.writeString(mPublisher);
        out.writeString(mName);
        out.writeInt(mAppId);
        out.writeInt(mAppVersion);
        out.writeInt(mNeededReadMemBytes);
        out.writeInt(mNeededWriteMemBytes);
        out.writeInt(mNeededExecMemBytes);

        out.writeInt(mNeededSensors.length);
        out.writeIntArray(mNeededSensors);

        out.writeInt(mOutputEvents.length);
        out.writeIntArray(mOutputEvents);

        out.writeInt(mAppBinary.length);
        out.writeByteArray(mAppBinary);
!!!3321143.java!!!	toString() : String
        String retVal = "Id : " + mAppId;
        retVal += ", Version : " + mAppVersion;
        retVal += ", Name : " + mName;
        retVal += ", Publisher : " + mPublisher;

        return retVal;
