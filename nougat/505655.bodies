class NativeEventHandlerDelegate
!!!3361847.java!!!	NativeEventHandlerDelegate(in listener : SoundTrigger::StatusListener, inout handler : Handler)
            // find the looper for our new event handler
            Looper looper;
            if (handler != null) {
                looper = handler.getLooper();
            } else {
                looper = Looper.getMainLooper();
            }

            // construct the event handler with this looper
            if (looper != null) {
                // implement the event handler delegate
                mHandler = new Handler(looper) {
                    @Override
                    public void handleMessage(Message msg) {
                        switch(msg.what) {
                        case EVENT_RECOGNITION:
                            if (listener != null) {
                                listener.onRecognition(
                                        (SoundTrigger.RecognitionEvent)msg.obj);
                            }
                            break;
                        case EVENT_SOUNDMODEL:
                            if (listener != null) {
                                listener.onSoundModelUpdate(
                                        (SoundTrigger.SoundModelEvent)msg.obj);
                            }
                            break;
                        case EVENT_SERVICE_STATE_CHANGE:
                            if (listener != null) {
                                listener.onServiceStateChange(msg.arg1);
                            }
                            break;
                        case EVENT_SERVICE_DIED:
                            if (listener != null) {
                                listener.onServiceDied();
                            }
                            break;
                        default:
                            break;
                        }
                    }
                };
            } else {
                mHandler = null;
            }
!!!3361975.java!!!	handler() : Handler
            return mHandler;
