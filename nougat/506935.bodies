class UsbPort
!!!3378103.java!!!	UsbPort(inout id : String, in supportedModes : int)
        mId = id;
        mSupportedModes = supportedModes;
!!!3378231.java!!!	getId() : String
        return mId;
!!!3378359.java!!!	getSupportedModes() : int
        return mSupportedModes;
!!!3378487.java!!!	combineRolesAsBit(in powerRole : int, in dataRole : int) : int
        checkRoles(powerRole, dataRole);
        final int index = powerRole * NUM_DATA_ROLES + dataRole;
        return 1 << index;
!!!3378615.java!!!	modeToString(in mode : int) : String
        switch (mode) {
            case 0:
                return "none";
            case MODE_DFP:
                return "dfp";
            case MODE_UFP:
                return "ufp";
            case MODE_DUAL:
                return "dual";
            default:
                return Integer.toString(mode);
        }
!!!3378743.java!!!	powerRoleToString(in role : int) : String
        switch (role) {
            case 0:
                return "no-power";
            case POWER_ROLE_SOURCE:
                return "source";
            case POWER_ROLE_SINK:
                return "sink";
            default:
                return Integer.toString(role);
        }
!!!3378871.java!!!	dataRoleToString(in role : int) : String
        switch (role) {
            case 0:
                return "no-data";
            case DATA_ROLE_HOST:
                return "host";
            case DATA_ROLE_DEVICE:
                return "device";
            default:
                return Integer.toString(role);
        }
!!!3378999.java!!!	roleCombinationsToString(in combo : int) : String
        StringBuilder result = new StringBuilder();
        result.append("[");

        boolean first = true;
        while (combo != 0) {
            final int index = Integer.numberOfTrailingZeros(combo);
            combo &= ~(1 << index);
            final int powerRole = index / NUM_DATA_ROLES;
            final int dataRole = index % NUM_DATA_ROLES;
            if (first) {
                first = false;
            } else {
                result.append(", ");
            }
            result.append(powerRoleToString(powerRole));
            result.append(':');
            result.append(dataRoleToString(dataRole));
        }

        result.append("]");
        return result.toString();
!!!3379127.java!!!	checkRoles(in powerRole : int, in dataRole : int) : void
        Preconditions.checkArgumentInRange(powerRole, 0, POWER_ROLE_SINK, "powerRole");
        Preconditions.checkArgumentInRange(dataRole, 0, DATA_ROLE_DEVICE, "dataRole");
!!!3379255.java!!!	toString() : String
        return "UsbPort{id=" + mId + ", supportedModes=" + modeToString(mSupportedModes) + "}";
!!!3379383.java!!!	describeContents() : int
        return 0;
!!!3379511.java!!!	writeToParcel(inout dest : Parcel, in flags : int) : void
        dest.writeString(mId);
        dest.writeInt(mSupportedModes);
