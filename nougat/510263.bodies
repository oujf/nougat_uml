class SoftInputWindow
!!!3431351.java!!!	setToken(inout token : IBinder) : void
        WindowManager.LayoutParams lp = getWindow().getAttributes();
        lp.token = token;
        getWindow().setAttributes(lp);
!!!3431479.java!!!	SoftInputWindow(inout context : Context, inout name : String, in theme : int, inout callback : SoftInputWindow::Callback, inout keyEventCallback : KeyEvent::Callback, inout dispatcherState : KeyEvent::DispatcherState, in windowType : int, in gravity : int, inout takesFocus : boolean)
        super(context, theme);
        mName = name;
        mCallback = callback;
        mKeyEventCallback = keyEventCallback;
        mDispatcherState = dispatcherState;
        mWindowType = windowType;
        mGravity = gravity;
        mTakesFocus = takesFocus;
        initDockWindow();
!!!3431607.java!!!	onWindowFocusChanged(inout hasFocus : boolean) : void
        super.onWindowFocusChanged(hasFocus);
        mDispatcherState.reset();
!!!3431735.java!!!	dispatchTouchEvent(inout ev : MotionEvent) : boolean
        getWindow().getDecorView().getHitRect(mBounds);

        if (ev.isWithinBoundsNoHistory(mBounds.left, mBounds.top,
                mBounds.right - 1, mBounds.bottom - 1)) {
            return super.dispatchTouchEvent(ev);
        } else {
            MotionEvent temp = ev.clampNoHistory(mBounds.left, mBounds.top,
                    mBounds.right - 1, mBounds.bottom - 1);
            boolean handled = super.dispatchTouchEvent(temp);
            temp.recycle();
            return handled;
        }
!!!3431863.java!!!	setGravity(in gravity : int) : void
        WindowManager.LayoutParams lp = getWindow().getAttributes();
        lp.gravity = gravity;
        updateWidthHeight(lp);
        getWindow().setAttributes(lp);
!!!3431991.java!!!	getGravity() : int
        return getWindow().getAttributes().gravity;
!!!3432119.java!!!	updateWidthHeight(inout lp : WindowManager::LayoutParams) : void
        if (lp.gravity == Gravity.TOP || lp.gravity == Gravity.BOTTOM) {
            lp.width = WindowManager.LayoutParams.MATCH_PARENT;
            lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
        } else {
            lp.width = WindowManager.LayoutParams.WRAP_CONTENT;
            lp.height = WindowManager.LayoutParams.MATCH_PARENT;
        }
!!!3432247.java!!!	onKeyDown(in keyCode : int, inout event : KeyEvent) : boolean
        if (mKeyEventCallback != null && mKeyEventCallback.onKeyDown(keyCode, event)) {
            return true;
        }
        return super.onKeyDown(keyCode, event);
!!!3432375.java!!!	onKeyLongPress(in keyCode : int, inout event : KeyEvent) : boolean
        if (mKeyEventCallback != null && mKeyEventCallback.onKeyLongPress(keyCode, event)) {
            return true;
        }
        return super.onKeyLongPress(keyCode, event);
!!!3432503.java!!!	onKeyUp(in keyCode : int, inout event : KeyEvent) : boolean
        if (mKeyEventCallback != null && mKeyEventCallback.onKeyUp(keyCode, event)) {
            return true;
        }
        return super.onKeyUp(keyCode, event);
!!!3432631.java!!!	onKeyMultiple(in keyCode : int, in count : int, inout event : KeyEvent) : boolean
        if (mKeyEventCallback != null && mKeyEventCallback.onKeyMultiple(keyCode, count, event)) {
            return true;
        }
        return super.onKeyMultiple(keyCode, count, event);
!!!3432759.java!!!	onBackPressed() : void
        if (mCallback != null) {
            mCallback.onBackPressed();
        } else {
            super.onBackPressed();
        }
!!!3432887.java!!!	initDockWindow() : void
        WindowManager.LayoutParams lp = getWindow().getAttributes();

        lp.type = mWindowType;
        lp.setTitle(mName);

        lp.gravity = mGravity;
        updateWidthHeight(lp);

        getWindow().setAttributes(lp);

        int windowSetFlags = WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN;
        int windowModFlags = WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN |
                WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE |
                WindowManager.LayoutParams.FLAG_DIM_BEHIND;

        if (!mTakesFocus) {
            windowSetFlags |= WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;
        } else {
            windowSetFlags |= WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL;
            windowModFlags |= WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL;
        }

        getWindow().setFlags(windowSetFlags, windowModFlags);
