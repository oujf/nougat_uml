class Builder
!!!3523511.java!!!	build() : NetworkRequest
            // Make a copy of mNetworkCapabilities so we don't inadvertently remove NOT_RESTRICTED
            // when later an unrestricted capability could be added to mNetworkCapabilities, in
            // which case NOT_RESTRICTED should be returned to mNetworkCapabilities, which
            // maybeMarkCapabilitiesRestricted() doesn't add back.
            final NetworkCapabilities nc = new NetworkCapabilities(mNetworkCapabilities);
            nc.maybeMarkCapabilitiesRestricted();
            return new NetworkRequest(nc, ConnectivityManager.TYPE_NONE,
                    ConnectivityManager.REQUEST_ID_UNSET);
!!!3523639.java!!!	addCapability(in capability : int) : NetworkRequest::Builder
            mNetworkCapabilities.addCapability(capability);
            return this;
!!!3523767.java!!!	removeCapability(in capability : int) : NetworkRequest::Builder
            mNetworkCapabilities.removeCapability(capability);
            return this;
!!!3523895.java!!!	clearCapabilities() : NetworkRequest::Builder
            mNetworkCapabilities.clearAll();
            return this;
!!!3524023.java!!!	addTransportType(in transportType : int) : NetworkRequest::Builder
            mNetworkCapabilities.addTransportType(transportType);
            return this;
!!!3524151.java!!!	removeTransportType(in transportType : int) : NetworkRequest::Builder
            mNetworkCapabilities.removeTransportType(transportType);
            return this;
!!!3524279.java!!!	setLinkUpstreamBandwidthKbps(in upKbps : int) : NetworkRequest::Builder
            mNetworkCapabilities.setLinkUpstreamBandwidthKbps(upKbps);
            return this;
!!!3524407.java!!!	setLinkDownstreamBandwidthKbps(in downKbps : int) : NetworkRequest::Builder
            mNetworkCapabilities.setLinkDownstreamBandwidthKbps(downKbps);
            return this;
!!!3524535.java!!!	setNetworkSpecifier(inout networkSpecifier : String) : NetworkRequest::Builder
            if (NetworkCapabilities.MATCH_ALL_REQUESTS_NETWORK_SPECIFIER.equals(networkSpecifier)) {
                throw new IllegalArgumentException("Invalid network specifier - must not be '"
                        + NetworkCapabilities.MATCH_ALL_REQUESTS_NETWORK_SPECIFIER + "'");
            }
            mNetworkCapabilities.setNetworkSpecifier(networkSpecifier);
            return this;
!!!3524663.java!!!	setSignalStrength(in signalStrength : int) : NetworkRequest::Builder
            mNetworkCapabilities.setSignalStrength(signalStrength);
            return this;
