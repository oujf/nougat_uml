class WebAddress
!!!3607735.java!!!	WebAddress(inout address : String)
        if (address == null) {
            throw new NullPointerException();
        }

        // android.util.Log.d(LOGTAG, "WebAddress: " + address);

        mScheme = "";
        mHost = "";
        mPort = -1;
        mPath = "/";
        mAuthInfo = "";

        Matcher m = sAddressPattern.matcher(address);
        String t;
        if (m.matches()) {
            t = m.group(MATCH_GROUP_SCHEME);
            if (t != null) mScheme = t.toLowerCase(Locale.ROOT);
            t = m.group(MATCH_GROUP_AUTHORITY);
            if (t != null) mAuthInfo = t;
            t = m.group(MATCH_GROUP_HOST);
            if (t != null) mHost = t;
            t = m.group(MATCH_GROUP_PORT);
            if (t != null && t.length() > 0) {
                // The ':' character is not returned by the regex.
                try {
                    mPort = Integer.parseInt(t);
                } catch (NumberFormatException ex) {
                    throw new ParseException("Bad port");
                }
            }
            t = m.group(MATCH_GROUP_PATH);
            if (t != null && t.length() > 0) {
                /* handle busted myspace frontpage redirect with
                   missing initial "/" */
                if (t.charAt(0) == '/') {
                    mPath = t;
                } else {
                    mPath = "/" + t;
                }
            }

        } else {
            // nothing found... outa here
            throw new ParseException("Bad address");
        }

        /* Get port from scheme or scheme from port, if necessary and
           possible */
        if (mPort == 443 && mScheme.equals("")) {
            mScheme = "https";
        } else if (mPort == -1) {
            if (mScheme.equals("https"))
                mPort = 443;
            else
                mPort = 80; // default
        }
        if (mScheme.equals("")) mScheme = "http";
!!!3607863.java!!!	toString() : String
        String port = "";
        if ((mPort != 443 && mScheme.equals("https")) ||
            (mPort != 80 && mScheme.equals("http"))) {
            port = ":" + Integer.toString(mPort);
        }
        String authInfo = "";
        if (mAuthInfo.length() > 0) {
            authInfo = mAuthInfo + "@";
        }

        return mScheme + "://" + authInfo + mHost + port + mPath;
!!!3607991.java!!!	setScheme(inout scheme : String) : void
      mScheme = scheme;
!!!3608119.java!!!	getScheme() : String
      return mScheme;
!!!3608247.java!!!	setHost(inout host : String) : void
      mHost = host;
!!!3608375.java!!!	getHost() : String
      return mHost;
!!!3608503.java!!!	setPort(in port : int) : void
      mPort = port;
!!!3608631.java!!!	getPort() : int
      return mPort;
!!!3608759.java!!!	setPath(inout path : String) : void
      mPath = path;
!!!3608887.java!!!	getPath() : String
      return mPath;
!!!3609015.java!!!	setAuthInfo(inout authInfo : String) : void
      mAuthInfo = authInfo;
!!!3609143.java!!!	getAuthInfo() : String
      return mAuthInfo;
