class IsoDep
!!!3671223.java!!!	get(inout tag : Tag) : IsoDep
        if (!tag.hasTech(TagTechnology.ISO_DEP)) return null;
        try {
            return new IsoDep(tag);
        } catch (RemoteException e) {
            return null;
        }
!!!3671351.java!!!	IsoDep(inout tag : Tag)
        super(tag, TagTechnology.ISO_DEP);
        Bundle extras = tag.getTechExtras(TagTechnology.ISO_DEP);
        if (extras != null) {
            mHiLayerResponse = extras.getByteArray(EXTRA_HI_LAYER_RESP);
            mHistBytes = extras.getByteArray(EXTRA_HIST_BYTES);
        }
!!!3671479.java!!!	setTimeout(in timeout : int) : void
        try {
            int err = mTag.getTagService().setTimeout(TagTechnology.ISO_DEP, timeout);
            if (err != ErrorCodes.SUCCESS) {
                throw new IllegalArgumentException("The supplied timeout is not valid");
            }
        } catch (RemoteException e) {
            Log.e(TAG, "NFC service dead", e);
        }
!!!3671607.java!!!	getTimeout() : int
        try {
            return mTag.getTagService().getTimeout(TagTechnology.ISO_DEP);
        } catch (RemoteException e) {
            Log.e(TAG, "NFC service dead", e);
            return 0;
        }
!!!3671735.java!!!	getHistoricalBytes() : byte
        return mHistBytes;
!!!3671863.java!!!	getHiLayerResponse() : byte
        return mHiLayerResponse;
!!!3671991.java!!!	transceive(inout data : byte) : byte
        return transceive(data, true);
!!!3672119.java!!!	getMaxTransceiveLength() : int
        return getMaxTransceiveLengthInternal();
!!!3672247.java!!!	isExtendedLengthApduSupported() : boolean
        try {
            return mTag.getTagService().getExtendedLengthApdusSupported();
        } catch (RemoteException e) {
            Log.e(TAG, "NFC service dead", e);
            return false;
        }
