class TokenWatcher
!!!3897143.java!!!	TokenWatcher(inout h : Handler, inout tag : String)
        mHandler = h;
        mTag = tag != null ? tag : "TokenWatcher";
!!!3897527.java!!!	acquire(inout token : IBinder, inout tag : String) : void
        synchronized (mTokens) {
            // explicitly checked to avoid bogus sendNotification calls because
            // of the WeakHashMap and the GC
            int oldSize = mTokens.size();

            Death d = new Death(token, tag);
            try {
                token.linkToDeath(d, 0);
            } catch (RemoteException e) {
                return;
            }
            mTokens.put(token, d);

            if (oldSize == 0 && !mAcquired) {
                sendNotificationLocked(true);
                mAcquired = true;
            }
        }
!!!3897655.java!!!	cleanup(inout token : IBinder, inout unlink : boolean) : void
        synchronized (mTokens) {
            Death d = mTokens.remove(token);
            if (unlink && d != null) {
                d.token.unlinkToDeath(d, 0);
                d.token = null;
            }

            if (mTokens.size() == 0 && mAcquired) {
                sendNotificationLocked(false);
                mAcquired = false;
            }
        }
!!!3897783.java!!!	release(inout token : IBinder) : void
        cleanup(token, true);
!!!3897911.java!!!	isAcquired() : boolean
        synchronized (mTokens) {
            return mAcquired;
        }
!!!3898039.java!!!	dump() : void
        ArrayList<String> a = dumpInternal();
        for (String s : a) {
            Log.i(mTag, s);
        }
!!!3898167.java!!!	dump(inout pw : PrintWriter) : void
        ArrayList<String> a = dumpInternal();
        for (String s : a) {
            pw.println(s);
        }
!!!3898295.java!!!	dumpInternal() : String
        ArrayList<String> a = new ArrayList<String>();
        synchronized (mTokens) {
            Set<IBinder> keys = mTokens.keySet();
            a.add("Token count: " + mTokens.size());
            int i = 0;
            for (IBinder b: keys) {
                a.add("[" + i + "] " + mTokens.get(b).tag + " - " + b);
                i++;
            }
        }
        return a;
!!!3898423.java!!!	sendNotificationLocked(inout on : boolean) : void
        int value = on ? 1 : 0;
        if (mNotificationQueue == -1) {
            // empty
            mNotificationQueue = value;
            mHandler.post(mNotificationTask);
        }
        else if (mNotificationQueue != value) {
            // it's a pair, so cancel it
            mNotificationQueue = -1;
            mHandler.removeCallbacks(mNotificationTask);
        }
        // else, same so do nothing -- maybe we should warn?
