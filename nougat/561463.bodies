class MultiSelectListPreference
!!!4030263.java!!!	MultiSelectListPreference(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int, in defStyleRes : int)
        super(context, attrs, defStyleAttr, defStyleRes);

        final TypedArray a = context.obtainStyledAttributes(attrs,
                com.android.internal.R.styleable.MultiSelectListPreference, defStyleAttr,
                defStyleRes);
        mEntries = a.getTextArray(com.android.internal.R.styleable.MultiSelectListPreference_entries);
        mEntryValues = a.getTextArray(com.android.internal.R.styleable.MultiSelectListPreference_entryValues);
        a.recycle();
!!!4030391.java!!!	MultiSelectListPreference(inout context : Context, inout attrs : AttributeSet, in defStyleAttr : int)
        this(context, attrs, defStyleAttr, 0);
!!!4030519.java!!!	MultiSelectListPreference(inout context : Context, inout attrs : AttributeSet)
        this(context, attrs, com.android.internal.R.attr.dialogPreferenceStyle);
!!!4030647.java!!!	MultiSelectListPreference(inout context : Context)
        this(context, null);
!!!4030775.java!!!	setEntries(inout entries : CharSequence) : void
        mEntries = entries;
!!!4030903.java!!!	setEntries(in entriesResId : int) : void
        setEntries(getContext().getResources().getTextArray(entriesResId));
!!!4031031.java!!!	getEntries() : CharSequence
        return mEntries;
!!!4031159.java!!!	setEntryValues(inout entryValues : CharSequence) : void
        mEntryValues = entryValues;
!!!4031287.java!!!	setEntryValues(in entryValuesResId : int) : void
        setEntryValues(getContext().getResources().getTextArray(entryValuesResId));
!!!4031415.java!!!	getEntryValues() : CharSequence
        return mEntryValues;
!!!4031543.java!!!	setValues(inout values : Set<String>) : void
        mValues.clear();
        mValues.addAll(values);

        persistStringSet(values);
!!!4031671.java!!!	getValues() : String
        return mValues;
!!!4031799.java!!!	findIndexOfValue(inout value : String) : int
        if (value != null && mEntryValues != null) {
            for (int i = mEntryValues.length - 1; i >= 0; i--) {
                if (mEntryValues[i].equals(value)) {
                    return i;
                }
            }
        }
        return -1;
!!!4031927.java!!!	onPrepareDialogBuilder(inout builder : AlertDialog::Builder) : void
        super.onPrepareDialogBuilder(builder);
        
        if (mEntries == null || mEntryValues == null) {
            throw new IllegalStateException(
                    "MultiSelectListPreference requires an entries array and " +
                    "an entryValues array.");
        }
        
        boolean[] checkedItems = getSelectedItems();
        builder.setMultiChoiceItems(mEntries, checkedItems,
                new DialogInterface.OnMultiChoiceClickListener() {
                    public void onClick(DialogInterface dialog, int which, boolean isChecked) {
                        if (isChecked) {
                            mPreferenceChanged |= mNewValues.add(mEntryValues[which].toString());
                        } else {
                            mPreferenceChanged |= mNewValues.remove(mEntryValues[which].toString());
                        }
                    }
                });
        mNewValues.clear();
        mNewValues.addAll(mValues);
!!!4032055.java!!!	getSelectedItems() : boolean
        final CharSequence[] entries = mEntryValues;
        final int entryCount = entries.length;
        final Set<String> values = mValues;
        boolean[] result = new boolean[entryCount];
        
        for (int i = 0; i < entryCount; i++) {
            result[i] = values.contains(entries[i].toString());
        }
        
        return result;
!!!4032183.java!!!	onDialogClosed(inout positiveResult : boolean) : void
        super.onDialogClosed(positiveResult);
        
        if (positiveResult && mPreferenceChanged) {
            final Set<String> values = mNewValues;
            if (callChangeListener(values)) {
                setValues(values);
            }
        }
        mPreferenceChanged = false;
!!!4032311.java!!!	onGetDefaultValue(inout a : TypedArray, in index : int) : Object
        final CharSequence[] defaultValues = a.getTextArray(index);
        final int valueCount = defaultValues.length;
        final Set<String> result = new HashSet<String>();
        
        for (int i = 0; i < valueCount; i++) {
            result.add(defaultValues[i].toString());
        }
        
        return result;
!!!4032439.java!!!	onSetInitialValue(inout restoreValue : boolean, inout defaultValue : Object) : void
        setValues(restoreValue ? getPersistedStringSet(mValues) : (Set<String>) defaultValue);
!!!4032567.java!!!	onSaveInstanceState() : Parcelable
        final Parcelable superState = super.onSaveInstanceState();
        if (isPersistent()) {
            // No need to save instance state
            return superState;
        }
        
        final SavedState myState = new SavedState(superState);
        myState.values = getValues();
        return myState;
