class PdfDocument
!!!4134199.java!!!	PdfDocument()
        mNativeDocument = nativeCreateDocument();
        mCloseGuard.open("close");
!!!4134327.java!!!	startPage(inout pageInfo : PdfDocument::PageInfo) : PdfDocument::Page
        throwIfClosed();
        throwIfCurrentPageNotFinished();
        if (pageInfo == null) {
            throw new IllegalArgumentException("page cannot be null");
        }
        Canvas canvas = new PdfCanvas(nativeStartPage(mNativeDocument, pageInfo.mPageWidth,
                pageInfo.mPageHeight, pageInfo.mContentRect.left, pageInfo.mContentRect.top,
                pageInfo.mContentRect.right, pageInfo.mContentRect.bottom));
        mCurrentPage = new Page(canvas, pageInfo);
        return mCurrentPage;
!!!4134455.java!!!	finishPage(inout page : PdfDocument::Page) : void
        throwIfClosed();
        if (page == null) {
            throw new IllegalArgumentException("page cannot be null");
        }
        if (page != mCurrentPage) {
            throw new IllegalStateException("invalid page");
        }
        if (page.isFinished()) {
            throw new IllegalStateException("page already finished");
        }
        mPages.add(page.getInfo());
        mCurrentPage = null;
        nativeFinishPage(mNativeDocument);
        page.finish();
!!!4134583.java!!!	writeTo(inout out : OutputStream) : void
        throwIfClosed();
        throwIfCurrentPageNotFinished();
        if (out == null) {
            throw new IllegalArgumentException("out cannot be null!");
        }
        nativeWriteTo(mNativeDocument, out, mChunk);
!!!4134711.java!!!	getPages() : PdfDocument::PageInfo
        return Collections.unmodifiableList(mPages);
!!!4134839.java!!!	close() : void
        throwIfCurrentPageNotFinished();
        dispose();
!!!4134967.java!!!	finalize() : void
        try {
            mCloseGuard.warnIfOpen();
            dispose();
        } finally {
            super.finalize();
        }
!!!4135095.java!!!	dispose() : void
        if (mNativeDocument != 0) {
            nativeClose(mNativeDocument);
            mCloseGuard.close();
            mNativeDocument = 0;
        }
!!!4135223.java!!!	throwIfClosed() : void
        if (mNativeDocument == 0) {
            throw new IllegalStateException("document is closed!");
        }
!!!4135351.java!!!	throwIfCurrentPageNotFinished() : void
        if (mCurrentPage != null) {
            throw new IllegalStateException("Current page not finished!");
        }
