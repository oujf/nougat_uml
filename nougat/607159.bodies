class CarrierMessagingService
!!!4267063.java!!!	onFilterSms(inout pdu : MessagePdu, inout format : String, in destPort : int, in subId : int, inout callback : CarrierMessagingService::ResultCallback) : void
        // optional
        try {
            callback.onReceiveResult(true);
        } catch (RemoteException ex) {
        }
!!!4267191.java!!!	onReceiveTextSms(inout pdu : MessagePdu, inout format : String, in destPort : int, in subId : int, in callback : CarrierMessagingService::ResultCallback) : void
        onFilterSms(pdu, format, destPort, subId, new ResultCallback<Boolean>() {
            @Override
            public void onReceiveResult(Boolean result) throws RemoteException {
                callback.onReceiveResult(result ? RECEIVE_OPTIONS_DEFAULT : RECEIVE_OPTIONS_DROP
                    | RECEIVE_OPTIONS_SKIP_NOTIFY_WHEN_CREDENTIAL_PROTECTED_STORAGE_UNAVAILABLE);
            }
        });
!!!4267319.java!!!	onSendTextSms(inout text : String, in subId : int, inout destAddress : String, inout callback : CarrierMessagingService::ResultCallback) : void
        // optional
        try {
            callback.onReceiveResult(new SendSmsResult(SEND_STATUS_RETRY_ON_CARRIER_NETWORK, 0));
        } catch (RemoteException ex) {
        }
!!!4267447.java!!!	onSendTextSms(inout text : String, in subId : int, inout destAddress : String, in sendSmsFlag : int, inout callback : CarrierMessagingService::ResultCallback) : void
        // optional
        onSendTextSms(text, subId, destAddress, callback);
!!!4267575.java!!!	onSendDataSms(inout data : byte, in subId : int, inout destAddress : String, in destPort : int, inout callback : CarrierMessagingService::ResultCallback) : void
        // optional
        try {
            callback.onReceiveResult(new SendSmsResult(SEND_STATUS_RETRY_ON_CARRIER_NETWORK, 0));
        } catch (RemoteException ex) {
        }
!!!4267703.java!!!	onSendDataSms(inout data : byte, in subId : int, inout destAddress : String, in destPort : int, in sendSmsFlag : int, inout callback : CarrierMessagingService::ResultCallback) : void
        // optional
        onSendDataSms(data, subId, destAddress, destPort, callback);
!!!4267831.java!!!	onSendMultipartTextSms(inout parts : List<String>, in subId : int, inout destAddress : String, inout callback : CarrierMessagingService::ResultCallback) : void
        // optional
        try {
            callback.onReceiveResult(
                    new SendMultipartSmsResult(SEND_STATUS_RETRY_ON_CARRIER_NETWORK, null));
        } catch (RemoteException ex) {
        }
!!!4267959.java!!!	onSendMultipartTextSms(inout parts : List<String>, in subId : int, inout destAddress : String, in sendSmsFlag : int, inout callback : CarrierMessagingService::ResultCallback) : void
        // optional
        onSendMultipartTextSms(parts, subId, destAddress, callback);
!!!4268087.java!!!	onSendMms(inout pduUri : Uri, in subId : int, inout location : Uri, inout callback : CarrierMessagingService::ResultCallback) : void
        // optional
        try {
            callback.onReceiveResult(new SendMmsResult(SEND_STATUS_RETRY_ON_CARRIER_NETWORK, null));
        } catch (RemoteException ex) {
        }
!!!4268215.java!!!	onDownloadMms(inout contentUri : Uri, in subId : int, inout location : Uri, inout callback : CarrierMessagingService::ResultCallback) : void
        // optional
        try {
            callback.onReceiveResult(DOWNLOAD_STATUS_RETRY_ON_CARRIER_NETWORK);
        } catch (RemoteException ex) {
        }
!!!4268343.java!!!	onBind(inout intent : Intent) : IBinder
        if (!SERVICE_INTERFACE.equals(intent.getAction())) {
            return null;
        }
        return mWrapper;
