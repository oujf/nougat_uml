class VoiceInteractionSessionService
!!!4351799.java!!!	onCreate() : void
        super.onCreate();
        mSystemService = IVoiceInteractionManagerService.Stub.asInterface(
                ServiceManager.getService(Context.VOICE_INTERACTION_MANAGER_SERVICE));
        mHandlerCaller = new HandlerCaller(this, Looper.myLooper(),
                mHandlerCallerCallback, true);
!!!4352055.java!!!	onBind(inout intent : Intent) : IBinder
        return mInterface.asBinder();
!!!4352183.java!!!	onConfigurationChanged(inout newConfig : Configuration) : void
        super.onConfigurationChanged(newConfig);
        if (mSession != null) {
            mSession.onConfigurationChanged(newConfig);
        }
!!!4352311.java!!!	onLowMemory() : void
        super.onLowMemory();
        if (mSession != null) {
            mSession.onLowMemory();
        }
!!!4352439.java!!!	onTrimMemory(in level : int) : void
        super.onTrimMemory(level);
        if (mSession != null) {
            mSession.onTrimMemory(level);
        }
!!!4352567.java!!!	dump(inout fd : FileDescriptor, inout writer : PrintWriter, inout args : String) : void
        if (mSession == null) {
            writer.println("(no active session)");
        } else {
            writer.println("VoiceInteractionSession:");
            mSession.dump("  ", fd, writer, args);
        }
!!!4352695.java!!!	doNewSession(inout token : IBinder, inout args : Bundle, in startFlags : int) : void
        if (mSession != null) {
            mSession.doDestroy();
            mSession = null;
        }
        mSession = onNewSession(args);
        try {
            mSystemService.deliverNewSession(token, mSession.mSession, mSession.mInteractor);
            mSession.doCreate(mSystemService, token);
        } catch (RemoteException e) {
        }
