class DisappearListener
!!!4674999.java!!!	DisappearListener(inout view : View, in finalVisibility : int, inout suppressLayout : boolean)
            this.mView = view;
            this.mFinalVisibility = finalVisibility;
            this.mParent = (ViewGroup) view.getParent();
            this.mSuppressLayout = suppressLayout;
            // Prevent a layout from including mView in its calculation.
            suppressLayout(true);
!!!4675127.java!!!	onAnimationPause(inout animation : Animator) : void
            if (!mCanceled) {
                mView.setTransitionVisibility(mFinalVisibility);
            }
!!!4675255.java!!!	onAnimationResume(inout animation : Animator) : void
            if (!mCanceled) {
                mView.setTransitionVisibility(View.VISIBLE);
            }
!!!4675383.java!!!	onAnimationCancel(inout animation : Animator) : void
            mCanceled = true;
!!!4675767.java!!!	onAnimationEnd(inout animation : Animator) : void
            hideViewWhenNotCanceled();
!!!4675895.java!!!	onTransitionEnd(inout transition : Transition) : void
            hideViewWhenNotCanceled();
!!!4676023.java!!!	onTransitionPause(inout transition : Transition) : void
            suppressLayout(false);
!!!4676151.java!!!	onTransitionResume(inout transition : Transition) : void
            suppressLayout(true);
!!!4676279.java!!!	hideViewWhenNotCanceled() : void
            if (!mCanceled) {
                // Recreate the parent's display list in case it includes mView.
                mView.setTransitionVisibility(mFinalVisibility);
                if (mParent != null) {
                    mParent.invalidate();
                }
            }
            // Layout is allowed now that the View is in its final state
            suppressLayout(false);
!!!4676407.java!!!	suppressLayout(inout suppress : boolean) : void
            if (mSuppressLayout && mLayoutSuppressed != suppress && mParent != null) {
                mLayoutSuppressed = suppress;
                mParent.suppressLayout(suppress);
            }
