class ZipInflaterInputStream
!!!4809143.java!!!	ZipInflaterInputStream(inout is : InputStream, inout inf : Inflater, in bsize : int, inout entry : ZipEntry)
            super(is, inf, bsize);
            this.entry = entry;
!!!4809271.java!!!	read(inout buffer : byte, in byteOffset : int, in byteCount : int) : int
            final int i;
            try {
                i = super.read(buffer, byteOffset, byteCount);
            } catch (IOException e) {
                throw new IOException("Error reading data for " + entry.getName() + " near offset "
                        + bytesRead, e);
            }
            if (i == -1) {
                if (entry.getSize() != bytesRead) {
                    throw new IOException("Size mismatch on inflated file: " + bytesRead + " vs "
                            + entry.getSize());
                }
            } else {
                bytesRead += i;
            }
            return i;
!!!4809399.java!!!	available() : int
            if (closed) {
                // Our superclass will throw an exception, but there's a jtreg test that
                // explicitly checks that the InputStream returned from ZipFile.getInputStream
                // returns 0 even when closed.
                return 0;
            }
            return super.available() == 0 ? 0 : (int) (entry.getSize() - bytesRead);
