class MyWindow
!!!4990135.java!!!	MyWindow(inout surfaceView : SurfaceView)
            mSurfaceView = new WeakReference<SurfaceView>(surfaceView);
!!!4990263.java!!!	resized(inout frame : Rect, inout overscanInsets : Rect, inout contentInsets : Rect, inout visibleInsets : Rect, inout stableInsets : Rect, inout outsets : Rect, inout reportDraw : boolean, inout newConfig : Configuration, inout backDropRect : Rect, inout forceLayout : boolean, inout alwaysConsumeNavBar : boolean) : void
            SurfaceView surfaceView = mSurfaceView.get();
            if (surfaceView != null) {
                if (DEBUG) Log.v(TAG, surfaceView + " got resized: w=" + frame.width()
                        + " h=" + frame.height() + ", cur w=" + mCurWidth + " h=" + mCurHeight);
                surfaceView.mSurfaceLock.lock();
                try {
                    if (reportDraw) {
                        surfaceView.mUpdateWindowNeeded = true;
                        surfaceView.mReportDrawNeeded = true;
                        surfaceView.mHandler.sendEmptyMessage(UPDATE_WINDOW_MSG);
                    } else if (surfaceView.mWinFrame.width() != frame.width()
                            || surfaceView.mWinFrame.height() != frame.height()
                            || forceLayout) {
                        surfaceView.mUpdateWindowNeeded = true;
                        surfaceView.mHandler.sendEmptyMessage(UPDATE_WINDOW_MSG);
                    }
                } finally {
                    surfaceView.mSurfaceLock.unlock();
                }
            }
!!!4990391.java!!!	dispatchAppVisibility(inout visible : boolean) : void
            // The point of SurfaceView is to let the app control the surface.
!!!4990519.java!!!	dispatchGetNewSurface() : void
            SurfaceView surfaceView = mSurfaceView.get();
            if (surfaceView != null) {
                Message msg = surfaceView.mHandler.obtainMessage(GET_NEW_SURFACE_MSG);
                surfaceView.mHandler.sendMessage(msg);
            }
!!!4990647.java!!!	windowFocusChanged(inout hasFocus : boolean, inout touchEnabled : boolean) : void
            Log.w("SurfaceView", "Unexpected focus in surface: focus=" + hasFocus + ", touchEnabled=" + touchEnabled);
