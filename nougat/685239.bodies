class W
!!!5094967.java!!!	W(inout viewAncestor : ViewRootImpl)
            mViewAncestor = new WeakReference<ViewRootImpl>(viewAncestor);
            mWindowSession = viewAncestor.mWindowSession;
!!!5095095.java!!!	resized(inout frame : Rect, inout overscanInsets : Rect, inout contentInsets : Rect, inout visibleInsets : Rect, inout stableInsets : Rect, inout outsets : Rect, inout reportDraw : boolean, inout newConfig : Configuration, inout backDropFrame : Rect, inout forceLayout : boolean, inout alwaysConsumeNavBar : boolean) : void
            final ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                viewAncestor.dispatchResized(frame, overscanInsets, contentInsets,
                        visibleInsets, stableInsets, outsets, reportDraw, newConfig, backDropFrame,
                        forceLayout, alwaysConsumeNavBar);
            }
!!!5095223.java!!!	moved(in newX : int, in newY : int) : void
            final ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                viewAncestor.dispatchMoved(newX, newY);
            }
!!!5095351.java!!!	dispatchAppVisibility(inout visible : boolean) : void
            final ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                viewAncestor.dispatchAppVisibility(visible);
            }
!!!5095479.java!!!	dispatchGetNewSurface() : void
            final ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                viewAncestor.dispatchGetNewSurface();
            }
!!!5095607.java!!!	windowFocusChanged(inout hasFocus : boolean, inout inTouchMode : boolean) : void
            final ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                viewAncestor.windowFocusChanged(hasFocus, inTouchMode);
            }
!!!5095735.java!!!	checkCallingPermission(inout permission : String) : int
            try {
                return ActivityManagerNative.getDefault().checkPermission(
                        permission, Binder.getCallingPid(), Binder.getCallingUid());
            } catch (RemoteException e) {
                return PackageManager.PERMISSION_DENIED;
            }
!!!5095863.java!!!	executeCommand(inout command : String, inout parameters : String, inout out : ParcelFileDescriptor) : void
            final ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                final View view = viewAncestor.mView;
                if (view != null) {
                    if (checkCallingPermission(Manifest.permission.DUMP) !=
                            PackageManager.PERMISSION_GRANTED) {
                        throw new SecurityException("Insufficient permissions to invoke"
                                + " executeCommand() from pid=" + Binder.getCallingPid()
                                + ", uid=" + Binder.getCallingUid());
                    }

                    OutputStream clientStream = null;
                    try {
                        clientStream = new ParcelFileDescriptor.AutoCloseOutputStream(out);
                        ViewDebug.dispatchCommand(view, command, parameters, clientStream);
                    } catch (IOException e) {
                        e.printStackTrace();
                    } finally {
                        if (clientStream != null) {
                            try {
                                clientStream.close();
                            } catch (IOException e) {
                                e.printStackTrace();
                            }
                        }
                    }
                }
            }
!!!5095991.java!!!	closeSystemDialogs(inout reason : String) : void
            final ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                viewAncestor.dispatchCloseSystemDialogs(reason);
            }
!!!5096119.java!!!	dispatchWallpaperOffsets(in x : float, in y : float, in xStep : float, in yStep : float, inout sync : boolean) : void
            if (sync) {
                try {
                    mWindowSession.wallpaperOffsetsComplete(asBinder());
                } catch (RemoteException e) {
                }
            }
!!!5096247.java!!!	dispatchWallpaperCommand(inout action : String, in x : int, in y : int, in z : int, inout extras : Bundle, inout sync : boolean) : void
            if (sync) {
                try {
                    mWindowSession.wallpaperCommandComplete(asBinder(), null);
                } catch (RemoteException e) {
                }
            }
!!!5096375.java!!!	dispatchDragEvent(inout event : DragEvent) : void
            final ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                viewAncestor.dispatchDragEvent(event);
            }
!!!5096503.java!!!	updatePointerIcon(in x : float, in y : float) : void
            final ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                viewAncestor.updatePointerIcon(x, y);
            }
!!!5096631.java!!!	dispatchSystemUiVisibilityChanged(in seq : int, in globalVisibility : int, in localValue : int, in localChanges : int) : void
            final ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                viewAncestor.dispatchSystemUiVisibilityChanged(seq, globalVisibility,
                        localValue, localChanges);
            }
!!!5096759.java!!!	dispatchWindowShown() : void
            final ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                viewAncestor.dispatchWindowShown();
            }
!!!5096887.java!!!	requestAppKeyboardShortcuts(inout receiver : IResultReceiver, in deviceId : int) : void
            ViewRootImpl viewAncestor = mViewAncestor.get();
            if (viewAncestor != null) {
                viewAncestor.dispatchRequestKeyboardShortcuts(receiver, deviceId);
            }
