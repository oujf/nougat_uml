class MimeTypeMap
!!!5326519.java!!!	getFileExtensionFromUrl(inout url : String) : String
        if (!TextUtils.isEmpty(url)) {
            int fragment = url.lastIndexOf('#');
            if (fragment > 0) {
                url = url.substring(0, fragment);
            }

            int query = url.lastIndexOf('?');
            if (query > 0) {
                url = url.substring(0, query);
            }

            int filenamePos = url.lastIndexOf('/');
            String filename =
                0 <= filenamePos ? url.substring(filenamePos + 1) : url;

            // if the filename contains special characters, we don't
            // consider it valid for our matching purposes:
            if (!filename.isEmpty() &&
                Pattern.matches("[a-zA-Z_0-9\\.\\-\\(\\)\\%]+", filename)) {
                int dotPos = filename.lastIndexOf('.');
                if (0 <= dotPos) {
                    return filename.substring(dotPos + 1);
                }
            }
        }

        return "";
!!!5326647.java!!!	hasMimeType(inout mimeType : String) : boolean
        return MimeUtils.hasMimeType(mimeType);
!!!5326775.java!!!	getMimeTypeFromExtension(inout extension : String) : String
        return MimeUtils.guessMimeTypeFromExtension(extension);
!!!5326903.java!!!	mimeTypeFromExtension(inout extension : String) : String
        return MimeUtils.guessMimeTypeFromExtension(extension);
!!!5327031.java!!!	hasExtension(inout extension : String) : boolean
        return MimeUtils.hasExtension(extension);
!!!5327159.java!!!	getExtensionFromMimeType(inout mimeType : String) : String
        return MimeUtils.guessExtensionFromMimeType(mimeType);
!!!5327287.java!!!	remapGenericMimeType(inout mimeType : String, inout url : String, inout contentDisposition : String) : String
        // If we have one of "generic" MIME types, try to deduce
        // the right MIME type from the file extension (if any):
        if ("text/plain".equals(mimeType) ||
                "application/octet-stream".equals(mimeType)) {

            // for attachment, use the filename in the Content-Disposition
            // to guess the mimetype
            String filename = null;
            if (contentDisposition != null) {
                filename = URLUtil.parseContentDisposition(contentDisposition);
            }
            if (filename != null) {
                url = filename;
            }
            String extension = getFileExtensionFromUrl(url);
            String newMimeType = getMimeTypeFromExtension(extension);
            if (newMimeType != null) {
                mimeType = newMimeType;
            }
        } else if ("text/vnd.wap.wml".equals(mimeType)) {
            // As we don't support wml, render it as plain text
            mimeType = "text/plain";
        } else {
            // It seems that xhtml+xml and vnd.wap.xhtml+xml mime
            // subtypes are used interchangeably. So treat them the same.
            if ("application/vnd.wap.xhtml+xml".equals(mimeType)) {
                mimeType = "application/xhtml+xml";
            }
        }
        return mimeType;
!!!5327415.java!!!	getSingleton() : MimeTypeMap
        return sMimeTypeMap;
