class SimpleAdapter
!!!5801399.java!!!	SimpleAdapter(inout context : Context, inout data : List<? extends Map<String, ?>>, in resource : int, inout from : String, inout to : int)
        mData = data;
        mResource = mDropDownResource = resource;
        mFrom = from;
        mTo = to;
        mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
!!!5801527.java!!!	getCount() : int
        return mData.size();
!!!5801655.java!!!	getItem(in position : int) : Object
        return mData.get(position);
!!!5801783.java!!!	getItemId(in position : int) : long
        return position;
!!!5801911.java!!!	getView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
        return createViewFromResource(mInflater, position, convertView, parent, mResource);
!!!5802039.java!!!	createViewFromResource(inout inflater : LayoutInflater, in position : int, inout convertView : View, inout parent : ViewGroup, in resource : int) : View
        View v;
        if (convertView == null) {
            v = inflater.inflate(resource, parent, false);
        } else {
            v = convertView;
        }

        bindView(position, v);

        return v;
!!!5802167.java!!!	setDropDownViewResource(in resource : int) : void
        mDropDownResource = resource;
!!!5802295.java!!!	setDropDownViewTheme(inout theme : Resources::Theme) : void
        if (theme == null) {
            mDropDownInflater = null;
        } else if (theme == mInflater.getContext().getTheme()) {
            mDropDownInflater = mInflater;
        } else {
            final Context context = new ContextThemeWrapper(mInflater.getContext(), theme);
            mDropDownInflater = LayoutInflater.from(context);
        }
!!!5802423.java!!!	getDropDownViewTheme() : Resources::Theme
        return mDropDownInflater == null ? null : mDropDownInflater.getContext().getTheme();
!!!5802551.java!!!	getDropDownView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
        final LayoutInflater inflater = mDropDownInflater == null ? mInflater : mDropDownInflater;
        return createViewFromResource(inflater, position, convertView, parent, mDropDownResource);
!!!5802679.java!!!	bindView(in position : int, inout view : View) : void
        final Map dataSet = mData.get(position);
        if (dataSet == null) {
            return;
        }

        final ViewBinder binder = mViewBinder;
        final String[] from = mFrom;
        final int[] to = mTo;
        final int count = to.length;

        for (int i = 0; i < count; i++) {
            final View v = view.findViewById(to[i]);
            if (v != null) {
                final Object data = dataSet.get(from[i]);
                String text = data == null ? "" : data.toString();
                if (text == null) {
                    text = "";
                }

                boolean bound = false;
                if (binder != null) {
                    bound = binder.setViewValue(v, data, text);
                }

                if (!bound) {
                    if (v instanceof Checkable) {
                        if (data instanceof Boolean) {
                            ((Checkable) v).setChecked((Boolean) data);
                        } else if (v instanceof TextView) {
                            // Note: keep the instanceof TextView check at the bottom of these
                            // ifs since a lot of views are TextViews (e.g. CheckBoxes).
                            setViewText((TextView) v, text);
                        } else {
                            throw new IllegalStateException(v.getClass().getName() +
                                    " should be bound to a Boolean, not a " +
                                    (data == null ? "<unknown type>" : data.getClass()));
                        }
                    } else if (v instanceof TextView) {
                        // Note: keep the instanceof TextView check at the bottom of these
                        // ifs since a lot of views are TextViews (e.g. CheckBoxes).
                        setViewText((TextView) v, text);
                    } else if (v instanceof ImageView) {
                        if (data instanceof Integer) {
                            setViewImage((ImageView) v, (Integer) data);                            
                        } else {
                            setViewImage((ImageView) v, text);
                        }
                    } else {
                        throw new IllegalStateException(v.getClass().getName() + " is not a " +
                                " view that can be bounds by this SimpleAdapter");
                    }
                }
            }
        }
!!!5802807.java!!!	getViewBinder() : SimpleAdapter::ViewBinder
        return mViewBinder;
!!!5802935.java!!!	setViewBinder(inout viewBinder : SimpleAdapter::ViewBinder) : void
        mViewBinder = viewBinder;
!!!5803063.java!!!	setViewImage(inout v : ImageView, in value : int) : void
        v.setImageResource(value);
!!!5803191.java!!!	setViewImage(inout v : ImageView, inout value : String) : void
        try {
            v.setImageResource(Integer.parseInt(value));
        } catch (NumberFormatException nfe) {
            v.setImageURI(Uri.parse(value));
        }
!!!5803319.java!!!	setViewText(inout v : TextView, inout text : String) : void
        v.setText(text);
!!!5803447.java!!!	getFilter() : Filter
        if (mFilter == null) {
            mFilter = new SimpleFilter();
        }
        return mFilter;
