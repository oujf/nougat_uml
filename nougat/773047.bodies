class MidiConstants
!!!6087991.java!!!	getBytesPerMessage(in statusByte : byte) : int
        // Java bytes are signed so we need to mask off the high bits
        // to get a value between 0 and 255.
        int statusInt = statusByte & 0xFF;
        if (statusInt >= 0xF0) {
            // System messages use low nibble for size.
            return SYSTEM_BYTE_LENGTHS[statusInt & 0x0F];
        } else if(statusInt >= 0x80) {
            // Channel voice messages use high nibble for size.
            return CHANNEL_BYTE_LENGTHS[(statusInt >> 4) - 8];
        } else {
            return 0; // data byte
        }
!!!6088119.java!!!	isAllActiveSensing(inout msg : byte, in offset : int, in count : int) : boolean
        // Count bytes that are not active sensing.
        int goodBytes = 0;
        for (int i = 0; i < count; i++) {
            byte b = msg[offset + i];
            if (b != MidiConstants.STATUS_ACTIVE_SENSING) {
                goodBytes++;
            }
        }
        return (goodBytes == 0);
!!!6088247.java!!!	allowRunningStatus(in command : byte) : boolean
        // only Channel Voice and Channel Mode commands can use running status
        return (command >= STATUS_NOTE_OFF && command < STATUS_SYSTEM_EXCLUSIVE);
!!!6088375.java!!!	cancelsRunningStatus(in command : byte) : boolean
        // System Common messages cancel running status
        return (command >= STATUS_SYSTEM_EXCLUSIVE && command <= STATUS_END_SYSEX);
