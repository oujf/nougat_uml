class ProgressReporter
!!!6247863.java!!!	ProgressReporter(in id : int)
        mId = id;
!!!6247991.java!!!	addListener(inout listener : IProgressListener) : void
        if (listener == null) return;
        synchronized (this) {
            mListeners.register(listener);
            switch (mState) {
                case STATE_INIT:
                    // Nothing has happened yet
                    break;
                case STATE_STARTED:
                    try {
                        listener.onStarted(mId, null);
                        listener.onProgress(mId, mProgress, mExtras);
                    } catch (RemoteException ignored) {
                    }
                    break;
                case STATE_FINISHED:
                    try {
                        listener.onFinished(mId, null);
                    } catch (RemoteException ignored) {
                    }
                    break;
            }
        }
!!!6248119.java!!!	setProgress(in progress : int) : void
        setProgress(progress, 100, null);
!!!6248247.java!!!	setProgress(in progress : int, inout title : CharSequence) : void
        setProgress(progress, 100, title);
!!!6248375.java!!!	setProgress(in n : int, in m : int) : void
        setProgress(n, m, null);
!!!6248503.java!!!	setProgress(in n : int, in m : int, inout title : CharSequence) : void
        synchronized (this) {
            if (mState != STATE_STARTED) {
                throw new IllegalStateException("Must be started to change progress");
            }
            mProgress = mSegmentRange[0]
                    + MathUtils.constrain((n * mSegmentRange[1]) / m, 0, mSegmentRange[1]);
            if (title != null) {
                mExtras.putCharSequence(Intent.EXTRA_TITLE, title);
            }
            notifyProgress(mId, mProgress, mExtras);
        }
!!!6248631.java!!!	startSegment(in size : int) : int
        synchronized (this) {
            final int[] lastRange = mSegmentRange;
            mSegmentRange = new int[] { mProgress, (size * mSegmentRange[1] / 100) };
            return lastRange;
        }
!!!6248759.java!!!	endSegment(inout lastRange : int) : void
        synchronized (this) {
            mProgress = mSegmentRange[0] + mSegmentRange[1];
            mSegmentRange = lastRange;
        }
!!!6248887.java!!!	getProgress() : int
        return mProgress;
!!!6249015.java!!!	getSegmentRange() : int
        return mSegmentRange;
!!!6249143.java!!!	start() : void
        synchronized (this) {
            mState = STATE_STARTED;
            notifyStarted(mId, null);
            notifyProgress(mId, mProgress, mExtras);
        }
!!!6249271.java!!!	finish() : void
        synchronized (this) {
            mState = STATE_FINISHED;
            notifyFinished(mId, null);
            mListeners.kill();
        }
!!!6249399.java!!!	notifyStarted(in id : int, inout extras : Bundle) : void
        for (int i = mListeners.beginBroadcast() - 1; i >= 0; i--) {
            try {
                mListeners.getBroadcastItem(i).onStarted(id, extras);
            } catch (RemoteException ignored) {
            }
        }
        mListeners.finishBroadcast();
!!!6249527.java!!!	notifyProgress(in id : int, in progress : int, inout extras : Bundle) : void
        for (int i = mListeners.beginBroadcast() - 1; i >= 0; i--) {
            try {
                mListeners.getBroadcastItem(i).onProgress(id, progress, extras);
            } catch (RemoteException ignored) {
            }
        }
        mListeners.finishBroadcast();
!!!6249655.java!!!	notifyFinished(in id : int, inout extras : Bundle) : void
        for (int i = mListeners.beginBroadcast() - 1; i >= 0; i--) {
            try {
                mListeners.getBroadcastItem(i).onFinished(id, extras);
            } catch (RemoteException ignored) {
            }
        }
        mListeners.finishBroadcast();
