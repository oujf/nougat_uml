class StateMachine
!!!6257335.java!!!	initStateMachine(inout name : String, inout looper : Looper) : void
        mName = name;
        mSmHandler = new SmHandler(looper, this);
!!!6257463.java!!!	StateMachine(inout name : String)
        mSmThread = new HandlerThread(name);
        mSmThread.start();
        Looper looper = mSmThread.getLooper();

        initStateMachine(name, looper);
!!!6257591.java!!!	StateMachine(inout name : String, inout looper : Looper)
        initStateMachine(name, looper);
!!!6257719.java!!!	StateMachine(inout name : String, inout handler : Handler)
        initStateMachine(name, handler.getLooper());
!!!6258103.java!!!	addState(inout state : State, inout parent : State) : void
        mSmHandler.addState(state, parent);
!!!6258231.java!!!	addState(inout state : State) : void
        mSmHandler.addState(state, null);
!!!6258359.java!!!	setInitialState(inout initialState : State) : void
        mSmHandler.setInitialState(initialState);
!!!6258487.java!!!	getCurrentMessage() : Message
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return null;
        return smh.getCurrentMessage();
!!!6258615.java!!!	getCurrentState() : IState
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return null;
        return smh.getCurrentState();
!!!6258743.java!!!	transitionTo(inout destState : IState) : void
        mSmHandler.transitionTo(destState);
!!!6258871.java!!!	transitionToHaltingState() : void
        mSmHandler.transitionTo(mSmHandler.mHaltingState);
!!!6258999.java!!!	deferMessage(inout msg : Message) : void
        mSmHandler.deferMessage(msg);
!!!6259127.java!!!	unhandledMessage(inout msg : Message) : void
        if (mSmHandler.mDbg) loge(" - unhandledMessage: msg.what=" + msg.what);
!!!6259639.java!!!	getName() : String
        return mName;
!!!6259767.java!!!	setLogRecSize(in maxSize : int) : void
        mSmHandler.mLogRecords.setSize(maxSize);
!!!6259895.java!!!	setLogOnlyTransitions(inout enable : boolean) : void
        mSmHandler.mLogRecords.setLogOnlyTransitions(enable);
!!!6260023.java!!!	getLogRecSize() : int
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return 0;
        return smh.mLogRecords.size();
!!!6260151.java!!!	getLogRecCount() : int
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return 0;
        return smh.mLogRecords.count();
!!!6260279.java!!!	getLogRec(in index : int) : StateMachine::LogRec
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return null;
        return smh.mLogRecords.get(index);
!!!6260407.java!!!	copyLogRecs() : StateMachine::LogRec
        Vector<LogRec> vlr = new Vector<LogRec>();
        SmHandler smh = mSmHandler;
        if (smh != null) {
            for (LogRec lr : smh.mLogRecords.mLogRecVector) {
                vlr.add(lr);
            }
        }
        return vlr;
!!!6260535.java!!!	addLogRec(inout string : String) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;
        smh.mLogRecords.add(this, smh.getCurrentMessage(), string, smh.getCurrentState(),
                smh.mStateStack[smh.mStateStackTopIndex].state, smh.mDestState);
!!!6260663.java!!!	recordLogRec(inout msg : Message) : boolean
        return true;
!!!6260791.java!!!	getLogRecString(inout msg : Message) : String
        return "";
!!!6260919.java!!!	getWhatToString(in what : int) : String
        return null;
!!!6261047.java!!!	getHandler() : Handler
        return mSmHandler;
!!!6261175.java!!!	obtainMessage() : Message
        return Message.obtain(mSmHandler);
!!!6261303.java!!!	obtainMessage(in what : int) : Message
        return Message.obtain(mSmHandler, what);
!!!6261431.java!!!	obtainMessage(in what : int, inout obj : Object) : Message
        return Message.obtain(mSmHandler, what, obj);
!!!6261559.java!!!	obtainMessage(in what : int, in arg1 : int) : Message
        // use this obtain so we don't match the obtain(h, what, Object) method
        return Message.obtain(mSmHandler, what, arg1, 0);
!!!6261687.java!!!	obtainMessage(in what : int, in arg1 : int, in arg2 : int) : Message
        return Message.obtain(mSmHandler, what, arg1, arg2);
!!!6261815.java!!!	obtainMessage(in what : int, in arg1 : int, in arg2 : int, inout obj : Object) : Message
        return Message.obtain(mSmHandler, what, arg1, arg2, obj);
!!!6261943.java!!!	sendMessage(in what : int) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessage(obtainMessage(what));
!!!6262071.java!!!	sendMessage(in what : int, inout obj : Object) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessage(obtainMessage(what, obj));
!!!6262199.java!!!	sendMessage(in what : int, in arg1 : int) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessage(obtainMessage(what, arg1));
!!!6262327.java!!!	sendMessage(in what : int, in arg1 : int, in arg2 : int) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessage(obtainMessage(what, arg1, arg2));
!!!6262455.java!!!	sendMessage(in what : int, in arg1 : int, in arg2 : int, inout obj : Object) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessage(obtainMessage(what, arg1, arg2, obj));
!!!6262583.java!!!	sendMessage(inout msg : Message) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessage(msg);
!!!6262711.java!!!	sendMessageDelayed(in what : int, in delayMillis : long) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageDelayed(obtainMessage(what), delayMillis);
!!!6262839.java!!!	sendMessageDelayed(in what : int, inout obj : Object, in delayMillis : long) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageDelayed(obtainMessage(what, obj), delayMillis);
!!!6262967.java!!!	sendMessageDelayed(in what : int, in arg1 : int, in delayMillis : long) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageDelayed(obtainMessage(what, arg1), delayMillis);
!!!6263095.java!!!	sendMessageDelayed(in what : int, in arg1 : int, in arg2 : int, in delayMillis : long) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageDelayed(obtainMessage(what, arg1, arg2), delayMillis);
!!!6263223.java!!!	sendMessageDelayed(in what : int, in arg1 : int, in arg2 : int, inout obj : Object, in delayMillis : long) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageDelayed(obtainMessage(what, arg1, arg2, obj), delayMillis);
!!!6263351.java!!!	sendMessageDelayed(inout msg : Message, in delayMillis : long) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageDelayed(msg, delayMillis);
!!!6263479.java!!!	sendMessageAtFrontOfQueue(in what : int) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageAtFrontOfQueue(obtainMessage(what));
!!!6263607.java!!!	sendMessageAtFrontOfQueue(in what : int, inout obj : Object) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageAtFrontOfQueue(obtainMessage(what, obj));
!!!6263735.java!!!	sendMessageAtFrontOfQueue(in what : int, in arg1 : int) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageAtFrontOfQueue(obtainMessage(what, arg1));
!!!6263863.java!!!	sendMessageAtFrontOfQueue(in what : int, in arg1 : int, in arg2 : int) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageAtFrontOfQueue(obtainMessage(what, arg1, arg2));
!!!6263991.java!!!	sendMessageAtFrontOfQueue(in what : int, in arg1 : int, in arg2 : int, inout obj : Object) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageAtFrontOfQueue(obtainMessage(what, arg1, arg2, obj));
!!!6264119.java!!!	sendMessageAtFrontOfQueue(inout msg : Message) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.sendMessageAtFrontOfQueue(msg);
!!!6264247.java!!!	removeMessages(in what : int) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.removeMessages(what);
!!!6264375.java!!!	removeDeferredMessages(in what : int) : void
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        Iterator<Message> iterator = smh.mDeferredMessages.iterator();
        while (iterator.hasNext()) {
            Message msg = iterator.next();
            if (msg.what == what) iterator.remove();
        }
!!!6264503.java!!!	hasDeferredMessages(in what : int) : boolean
        SmHandler smh = mSmHandler;
        if (smh == null) return false;

        Iterator<Message> iterator = smh.mDeferredMessages.iterator();
        while (iterator.hasNext()) {
            Message msg = iterator.next();
            if (msg.what == what) return true;
        }

        return false;
!!!6264631.java!!!	hasMessages(in what : int) : boolean
        SmHandler smh = mSmHandler;
        if (smh == null) return false;

        return smh.hasMessages(what);
!!!6264759.java!!!	isQuit(inout msg : Message) : boolean
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return msg.what == SM_QUIT_CMD;

        return smh.isQuit(msg);
!!!6264887.java!!!	quit() : void
        // mSmHandler can be null if the state machine is already stopped.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.quit();
!!!6265015.java!!!	quitNow() : void
        // mSmHandler can be null if the state machine is already stopped.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.quitNow();
!!!6265143.java!!!	isDbg() : boolean
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return false;

        return smh.isDbg();
!!!6265271.java!!!	setDbg(inout dbg : boolean) : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        smh.setDbg(dbg);
!!!6265399.java!!!	start() : void
        // mSmHandler can be null if the state machine has quit.
        SmHandler smh = mSmHandler;
        if (smh == null) return;

        /** Send the complete construction message */
        smh.completeConstruction();
!!!6265527.java!!!	dump(inout fd : FileDescriptor, inout pw : PrintWriter, inout args : String) : void
        // Cannot just invoke pw.println(this.toString()) because if the
        // resulting string is to long it won't be displayed.
        pw.println(getName() + ":");
        pw.println(" total records=" + getLogRecCount());
        for (int i = 0; i < getLogRecSize(); i++) {
            pw.println(" rec[" + i + "]: " + getLogRec(i).toString());
            pw.flush();
        }
        pw.println("curState=" + getCurrentState().getName());
!!!6265655.java!!!	toString() : String
        StringWriter sr = new StringWriter();
        PrintWriter pr = new PrintWriter(sr);
        dump(null, pr, null);
        pr.flush();
        pr.close();
        return sr.toString();
!!!6265783.java!!!	logAndAddLogRec(inout s : String) : void
        addLogRec(s);
        log(s);
!!!6265911.java!!!	log(inout s : String) : void
        Log.d(mName, s);
!!!6266039.java!!!	logd(inout s : String) : void
        Log.d(mName, s);
!!!6266167.java!!!	logv(inout s : String) : void
        Log.v(mName, s);
!!!6266295.java!!!	logi(inout s : String) : void
        Log.i(mName, s);
!!!6266423.java!!!	logw(inout s : String) : void
        Log.w(mName, s);
!!!6266551.java!!!	loge(inout s : String) : void
        Log.e(mName, s);
!!!6266679.java!!!	loge(inout s : String, inout e : Throwable) : void
        Log.e(mName, s, e);
