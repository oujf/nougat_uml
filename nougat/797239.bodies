class FallbackLUTInterpolator
!!!6287415.java!!!	FallbackLUTInterpolator(inout interpolator : TimeInterpolator, in duration : long)
        mSourceInterpolator = interpolator;
        mLut = createLUT(interpolator, duration);
!!!6287543.java!!!	createLUT(inout interpolator : TimeInterpolator, in duration : long) : float
        long frameIntervalNanos = Choreographer.getInstance().getFrameIntervalNanos();
        int animIntervalMs = (int) (frameIntervalNanos / TimeUtils.NANOS_PER_MS);
        // We need 2 frame values as the minimal.
        int numAnimFrames = Math.max(2, (int) Math.ceil(((double) duration) / animIntervalMs));
        float values[] = new float[numAnimFrames];
        float lastFrame = numAnimFrames - 1;
        for (int i = 0; i < numAnimFrames; i++) {
            float inValue = i / lastFrame;
            values[i] = interpolator.getInterpolation(inValue);
        }
        return values;
!!!6287671.java!!!	createNativeInterpolator() : long
        return NativeInterpolatorFactoryHelper.createLutInterpolator(mLut);
!!!6287799.java!!!	createNativeInterpolator(inout interpolator : TimeInterpolator, in duration : long) : long
        float[] lut = createLUT(interpolator, duration);
        return NativeInterpolatorFactoryHelper.createLutInterpolator(lut);
!!!6287927.java!!!	getInterpolation(in input : float) : float
        return mSourceInterpolator.getInterpolation(input);
