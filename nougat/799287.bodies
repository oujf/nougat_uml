class MenuAdapter
!!!6321591.java!!!	MenuAdapter()
            findExpandedIndex();
!!!6321719.java!!!	getCount() : int
            ArrayList<MenuItemImpl> items = mMenu.getNonActionItems();
            int count = items.size() - mItemIndexOffset;
            if (mExpandedIndex < 0) {
                return count;
            }
            return count - 1;
!!!6321847.java!!!	getItem(in position : int) : MenuItemImpl
            ArrayList<MenuItemImpl> items = mMenu.getNonActionItems();
            position += mItemIndexOffset;
            if (mExpandedIndex >= 0 && position >= mExpandedIndex) {
                position++;
            }
            return items.get(position);
!!!6321975.java!!!	getItemId(in position : int) : long
            // Since a menu item's ID is optional, we'll use the position as an
            // ID for the item in the AdapterView
            return position;
!!!6322103.java!!!	getView(in position : int, inout convertView : View, inout parent : ViewGroup) : View
            if (convertView == null) {
                convertView = mInflater.inflate(mItemLayoutRes, parent, false);
            }

            MenuView.ItemView itemView = (MenuView.ItemView) convertView;
            itemView.initialize(getItem(position), 0);
            return convertView;
!!!6322231.java!!!	findExpandedIndex() : void
            final MenuItemImpl expandedItem = mMenu.getExpandedItem();
            if (expandedItem != null) {
                final ArrayList<MenuItemImpl> items = mMenu.getNonActionItems();
                final int count = items.size();
                for (int i = 0; i < count; i++) {
                    final MenuItemImpl item = items.get(i);
                    if (item == expandedItem) {
                        mExpandedIndex = i;
                        return;
                    }
                }
            }
            mExpandedIndex = -1;
!!!6322359.java!!!	notifyDataSetChanged() : void
            findExpandedIndex();
            super.notifyDataSetChanged();
