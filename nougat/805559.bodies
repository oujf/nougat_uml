class PasswordEntryKeyboard
!!!6438327.java!!!	PasswordEntryKeyboard(inout context : Context, in xmlLayoutResId : int)
        this(context, xmlLayoutResId, 0);
!!!6438455.java!!!	PasswordEntryKeyboard(inout context : Context, in xmlLayoutResId : int, in width : int, in height : int)
        this(context, xmlLayoutResId, 0, width, height);
!!!6438583.java!!!	PasswordEntryKeyboard(inout context : Context, in xmlLayoutResId : int, in mode : int)
        super(context, xmlLayoutResId, mode);
        init(context);
!!!6438711.java!!!	PasswordEntryKeyboard(inout context : Context, in xmlLayoutResId : int, in mode : int, in width : int, in height : int)
        super(context, xmlLayoutResId, mode, width, height);
        init(context);
!!!6438839.java!!!	init(inout context : Context) : void
        final Resources res = context.getResources();
        mShiftIcon = context.getDrawable(R.drawable.sym_keyboard_shift);
        mShiftLockIcon = context.getDrawable(R.drawable.sym_keyboard_shift_locked);
        sSpacebarVerticalCorrection = res.getDimensionPixelOffset(
                R.dimen.password_keyboard_spacebar_vertical_correction);
!!!6438967.java!!!	PasswordEntryKeyboard(inout context : Context, in layoutTemplateResId : int, inout characters : CharSequence, in columns : int, in horizontalPadding : int)
        super(context, layoutTemplateResId, characters, columns, horizontalPadding);
!!!6439095.java!!!	createKeyFromXml(inout res : Resources, inout parent : Keyboard::Row, in x : int, in y : int, inout parser : XmlResourceParser) : Keyboard::Key
        LatinKey key = new LatinKey(res, parent, x, y, parser);
        final int code = key.codes[0];
        if (code >=0 && code != '\n' && (code < 32 || code > 127)) {
            // Log.w(TAG, "Key code for " + key.label + " is not latin-1");
            key.label = " ";
            key.setEnabled(false);
        }
        switch (key.codes[0]) {
            case 10:
                mEnterKey = key;
                break;
            case PasswordEntryKeyboardView.KEYCODE_F1:
                mF1Key = key;
                break;
            case 32:
                mSpaceKey = key;
                break;
        }
        return key;
!!!6439223.java!!!	setEnterKeyResources(inout res : Resources, in previewId : int, in iconId : int, in labelId : int) : void
        if (mEnterKey != null) {
            // Reset some of the rarely used attributes.
            mEnterKey.popupCharacters = null;
            mEnterKey.popupResId = 0;
            mEnterKey.text = null;

            mEnterKey.iconPreview = res.getDrawable(previewId);
            mEnterKey.icon = res.getDrawable(iconId);
            mEnterKey.label = res.getText(labelId);

            // Set the initial size of the preview icon
            if (mEnterKey.iconPreview != null) {
                mEnterKey.iconPreview.setBounds(0, 0,
                        mEnterKey.iconPreview.getIntrinsicWidth(),
                        mEnterKey.iconPreview.getIntrinsicHeight());
            }
        }
!!!6439351.java!!!	enableShiftLock() : void
        int i = 0;
        for (int index : getShiftKeyIndices()) {
            if (index >= 0 && i < mShiftKeys.length) {
                mShiftKeys[i] = getKeys().get(index);
                if (mShiftKeys[i] instanceof LatinKey) {
                    ((LatinKey)mShiftKeys[i]).enableShiftLock();
                }
                mOldShiftIcons[i] = mShiftKeys[i].icon;
                i++;
            }
        }
!!!6439479.java!!!	setShiftLocked(inout shiftLocked : boolean) : void
        for (Key shiftKey : mShiftKeys) {
            if (shiftKey != null) {
                shiftKey.on = shiftLocked;
                shiftKey.icon = mShiftLockIcon;
            }
        }
        mShiftState = shiftLocked ? SHIFT_LOCKED : SHIFT_ON;
!!!6439607.java!!!	setShifted(inout shiftState : boolean) : boolean
        boolean shiftChanged = false;
        if (shiftState == false) {
            shiftChanged = mShiftState != SHIFT_OFF;
            mShiftState = SHIFT_OFF;
        } else if (mShiftState == SHIFT_OFF) {
            shiftChanged = mShiftState == SHIFT_OFF;
            mShiftState = SHIFT_ON;
        }
        for (int i = 0; i < mShiftKeys.length; i++) {
            if (mShiftKeys[i] != null) {
                if (shiftState == false) {
                    mShiftKeys[i].on = false;
                    mShiftKeys[i].icon = mOldShiftIcons[i];
                } else if (mShiftState == SHIFT_OFF) {
                    mShiftKeys[i].on = false;
                    mShiftKeys[i].icon = mShiftIcon;
                }
            } else {
                // return super.setShifted(shiftState);
            }
        }
        return shiftChanged;
!!!6439735.java!!!	isShifted() : boolean
        if (mShiftKeys[0] != null) {
            return mShiftState != SHIFT_OFF;
        } else {
            return super.isShifted();
        }
