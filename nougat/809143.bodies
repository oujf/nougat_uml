class WeightedLinearLayout
!!!6486839.java!!!	WeightedLinearLayout(inout context : Context)
        super(context);
!!!6486967.java!!!	WeightedLinearLayout(inout context : Context, inout attrs : AttributeSet)
        super(context, attrs);
        
        TypedArray a = 
            context.obtainStyledAttributes(attrs, styleable.WeightedLinearLayout);

        mMajorWeightMin = a.getFloat(styleable.WeightedLinearLayout_majorWeightMin, 0.0f);
        mMinorWeightMin = a.getFloat(styleable.WeightedLinearLayout_minorWeightMin, 0.0f);
        mMajorWeightMax = a.getFloat(styleable.WeightedLinearLayout_majorWeightMax, 0.0f);
        mMinorWeightMax = a.getFloat(styleable.WeightedLinearLayout_minorWeightMax, 0.0f);
        
        a.recycle();
!!!6487095.java!!!	onMeasure(in widthMeasureSpec : int, in heightMeasureSpec : int) : void
        final DisplayMetrics metrics = getContext().getResources().getDisplayMetrics();
        final int screenWidth = metrics.widthPixels;
        final boolean isPortrait = screenWidth < metrics.heightPixels;

        final int widthMode = getMode(widthMeasureSpec);

        super.onMeasure(widthMeasureSpec, heightMeasureSpec);

        int width = getMeasuredWidth();
        boolean measure = false;

        widthMeasureSpec = MeasureSpec.makeMeasureSpec(width, EXACTLY);

        final float widthWeightMin = isPortrait ? mMinorWeightMin : mMajorWeightMin;
        final float widthWeightMax = isPortrait ? mMinorWeightMax : mMajorWeightMax;
        if (widthMode == AT_MOST) {
            final int weightedMin = (int) (screenWidth * widthWeightMin);
            final int weightedMax = (int) (screenWidth * widthWeightMin);
            if (widthWeightMin > 0.0f && width < weightedMin) {
                widthMeasureSpec = MeasureSpec.makeMeasureSpec(weightedMin, EXACTLY);
                measure = true;
            } else if (widthWeightMax > 0.0f && width > weightedMax) {
                widthMeasureSpec = MeasureSpec.makeMeasureSpec(weightedMax, EXACTLY);
                measure = true;
            }
        }

        // TODO: Support height?

        if (measure) {
            super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        }
