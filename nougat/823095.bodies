class ListenerRunnable
!!!6568503.java!!!	ListenerRunnable(inout bttraffic : BTtraffic, inout intent : Intent)
            this.bttraffic = bttraffic;
            this.sendAck = intent.getBooleanExtra("ack", true);
            this.intent = intent;
!!!6568631.java!!!	run() : void
            BluetoothServerSocket serverSocket;

            try {
                Log.d(TAG, "getting server socket");
                serverSocket = BluetoothAdapter.getDefaultAdapter()
                        .listenUsingInsecureRfcommWithServiceRecord(
                                SERVICE_NAME, SERVICE_UUID);
            } catch (IOException e) {
                Log.d(TAG, "error creating server socket, stopping thread");
                bttraffic.stopService();
                return;
            }

            Log.d(TAG, "got server socket, starting accept loop");
            BluetoothSocket socket = null;
            try {
                Log.d(TAG, "accepting");
                socket = serverSocket.accept();

                if (!Thread.interrupted()) {
                    Log.d(TAG, "accepted, listening");
                    doListening(socket.getInputStream(), socket.getOutputStream());
                    Log.d(TAG, "listen finished");
                }
            } catch (IOException e) {
                Log.d(TAG, "error while accepting or listening", e);
            } finally {
                Log.d(TAG, "Linster interruped");
                Log.d(TAG, "closing socket and stopping service");
                safeClose(serverSocket);
                safeClose(socket);
                if (!bttraffic.isShuttingDown)
                    bttraffic.stopService();
            }

!!!6568759.java!!!	doListening(inout inputStream : InputStream, inout outputStream : OutputStream) : void
            ByteBuffer byteBuffer = ByteBuffer.allocate(maxbuffersize);

            while (!Thread.interrupted()) {
                readBytesIntoBuffer(inputStream, byteBuffer, 4);
                byteBuffer.flip();
                int length = byteBuffer.getInt();
                if (Thread.interrupted())
                    break;
                readBytesIntoBuffer(inputStream, byteBuffer, length);

                if (sendAck)
                    outputStream.write(0x55);
            }
!!!6568887.java!!!	readBytesIntoBuffer(inout inputStream : InputStream, inout byteBuffer : ByteBuffer, in numToRead : int) : void
            byteBuffer.clear();
            while (true) {
                int position = byteBuffer.position();
                int remaining = numToRead - position;
                if (remaining == 0) {
                    break;
                }
                int count = inputStream.read(byteBuffer.array(), position, remaining);
                if (count < 0) {
                    throw new IOException("read the EOF");
                }
                byteBuffer.position(position + count);
            }
