class TestServicesCache
!!!6705207.java!!!	TestServicesCache()
            super(RegisteredServicesCacheTest.this.mContext,
                    SERVICE_INTERFACE, SERVICE_META_DATA, ATTRIBUTES_NAME, new TestSerializer());
!!!6705335.java!!!	parseServiceAttributes(inout res : Resources, inout packageName : String, inout attrs : AttributeSet) : RegisteredServicesCacheTest::TestServiceType
            return null;
!!!6705463.java!!!	queryIntentServices(in userId : int) : ResolveInfo
            Map<ResolveInfo, ServiceInfo<TestServiceType>> map = mServices
                    .get(userId, new HashMap<ResolveInfo, ServiceInfo<TestServiceType>>());
            return new ArrayList<>(map.keySet());
!!!6705591.java!!!	getUserSystemDirectory(in userId : int) : File
            File dir = new File(mDataDir, "users/" + userId);
            dir.mkdirs();
            return dir;
!!!6705719.java!!!	getUsers() : UserInfo
            return mUsers;
!!!6705847.java!!!	getUser(in userId : int) : UserInfo
            for (UserInfo user : getUsers()) {
                if (user.id == userId) {
                    return user;
                }
            }
            return null;
!!!6705975.java!!!	getDataDirectory() : File
            return mDataDir;
!!!6706103.java!!!	addServiceForQuerying(in userId : int, inout resolveInfo : ResolveInfo, inout serviceInfo : RegisteredServicesCache::ServiceInfo) : void
            Map<ResolveInfo, ServiceInfo<TestServiceType>> map = mServices.get(userId);
            if (map == null) {
                map = new HashMap<>();
                mServices.put(userId, map);
            }
            map.put(resolveInfo, serviceInfo);
!!!6706231.java!!!	clearServicesForQuerying() : void
            mServices.clear();
!!!6706359.java!!!	getPersistentServicesSize(in user : int) : int
            return getPersistentServices(user).size();
!!!6706487.java!!!	getAllServicesSize(in user : int) : int
            return getAllServices(user).size();
!!!6706615.java!!!	inSystemImage(in callerUid : int) : boolean
            return callerUid == SYSTEM_IMAGE_UID;
!!!6706743.java!!!	parseServiceInfo(inout resolveInfo : ResolveInfo) : RegisteredServicesCache::ServiceInfo
            int size = mServices.size();
            for (int i = 0; i < size; i++) {
                Map<ResolveInfo, ServiceInfo<TestServiceType>> map = mServices.valueAt(i);
                ServiceInfo<TestServiceType> serviceInfo = map.get(resolveInfo);
                if (serviceInfo != null) {
                    return serviceInfo;
                }
            }
            throw new IllegalArgumentException("Unexpected service " + resolveInfo);
!!!6706871.java!!!	onUserRemoved(in userId : int) : void
            super.onUserRemoved(userId);
