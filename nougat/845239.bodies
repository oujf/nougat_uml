class ResourcesLocaleTest
!!!6715319.java!!!	extractApkAndGetPath(in id : int) : String
        final Resources resources = getContext().getResources();
        try (InputStream is = resources.openRawResource(id)) {
            File path = new File(getContext().getFilesDir(), resources.getResourceEntryName(id));
            FileUtils.copyToFileOrThrow(is, path);
            return path.getAbsolutePath();
        }
!!!6715447.java!!!	createResourcesWithApk(in rawApkId : int) : Resources
        final AssetManager assets = new AssetManager();
        assertTrue(assets.addAssetPath(extractApkAndGetPath(rawApkId)) != 0);

        final DisplayMetrics dm = new DisplayMetrics();
        dm.setToDefaults();
        return new Resources(assets, dm, new Configuration());
!!!6715575.java!!!	ensureNoLanguage(inout resources : Resources, inout language : String) : void
        final String[] supportedLocales = resources.getAssets().getNonSystemLocales();
        for (String languageTag : supportedLocales) {
            if ("en-XA".equals(languageTag)) {
                continue;
            }
            assertFalse(
                    "supported locales: " + Arrays.toString(supportedLocales),
                    language.equals(Locale.forLanguageTag(languageTag).getLanguage()));
        }
!!!6715703.java!!!	testEnglishIsAlwaysConsideredSupported() : void
        final Resources resources = createResourcesWithApk(R.raw.locales);
        ensureNoLanguage(resources, "en");

        final LocaleList preferredLocales = LocaleList.forLanguageTags("en-US,pl-PL");
        final Configuration config = new Configuration();
        config.setLocales(preferredLocales);

        resources.updateConfiguration(config, null);

        // The APK we loaded has default and Polish languages. If English is first in the list,
        // always take it the default (assumed to be English).
        assertEquals(Locale.forLanguageTag("en-US"),
                resources.getConfiguration().getLocales().get(0));
!!!6715831.java!!!	testSelectFirstSupportedLanguage() : void
        final Resources resources = createResourcesWithApk(R.raw.locales);
        ensureNoLanguage(resources, "fr");

        final LocaleList preferredLocales = LocaleList.forLanguageTags("fr-FR,pl-PL");
        final Configuration config = new Configuration();
        config.setLocales(preferredLocales);

        resources.updateConfiguration(config, null);

        // The APK we loaded has default and Polish languages. We expect the Polish language to
        // therefore be chosen.
        assertEquals(Locale.forLanguageTag("pl-PL"),
                resources.getConfiguration().getLocales().get(0));
