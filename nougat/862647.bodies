class AidlObject
!!!6799031.java!!!	queryLocalInterface(inout descriptor : String) : IInterface
            // overriding this to return null makes asInterface always
            // generate a proxy
            return null;
!!!6799159.java!!!	intMethod(in a : int) : int
            return a;
!!!6799287.java!!!	parcelableIn(inout p : AidlTest::TestParcelable) : AidlTest::TestParcelable
            p.mAnInt++;
            return p;
!!!6799415.java!!!	parcelableOut(inout p : AidlTest::TestParcelable) : AidlTest::TestParcelable
            p.mAnInt = 44;
            return p;
!!!6799543.java!!!	parcelableInOut(inout p : AidlTest::TestParcelable) : AidlTest::TestParcelable
            p.mAnInt++;
            return p;
!!!6799671.java!!!	listParcelableLonger(inout list : List<TestParcelable>, in index : int) : AidlTest::TestParcelable
            list.add(list.get(index));
            return list.get(index);
!!!6799799.java!!!	listParcelableShorter(inout list : List<TestParcelable>, in index : int) : int
            list.remove(index);
            return list.size();
!!!6799927.java!!!	booleanArray(inout a0 : boolean, inout a1 : boolean, inout a2 : boolean) : boolean
            for (int i = 0; i < a0.length && i < a2.length; i++) {
                a2[i] = a0[i];
            }
            for (int i = 0; i < a0.length && i < a1.length; i++) {
                a1[i] = a0[i];
            }
            return a0;
!!!6800055.java!!!	charArray(inout a0 : char, inout a1 : char, inout a2 : char) : char
            for (int i = 0; i < a0.length && i < a2.length; i++) {
                a2[i] = a0[i];
            }
            for (int i = 0; i < a0.length && i < a1.length; i++) {
                a1[i] = a0[i];
            }
            return a0;
!!!6800183.java!!!	intArray(inout a0 : int, inout a1 : int, inout a2 : int) : int
            for (int i = 0; i < a0.length && i < a2.length; i++) {
                a2[i] = a0[i];
            }
            for (int i = 0; i < a0.length && i < a1.length; i++) {
                a1[i] = a0[i];
            }
            return a0;
!!!6800311.java!!!	longArray(inout a0 : long, inout a1 : long, inout a2 : long) : long
            for (int i = 0; i < a0.length && i < a2.length; i++) {
                a2[i] = a0[i];
            }
            for (int i = 0; i < a0.length && i < a1.length; i++) {
                a1[i] = a0[i];
            }
            return a0;
!!!6800439.java!!!	floatArray(inout a0 : float, inout a1 : float, inout a2 : float) : float
            for (int i = 0; i < a0.length && i < a2.length; i++) {
                a2[i] = a0[i];
            }
            for (int i = 0; i < a0.length && i < a1.length; i++) {
                a1[i] = a0[i];
            }
            return a0;
!!!6800567.java!!!	doubleArray(inout a0 : double, inout a1 : double, inout a2 : double) : double
            for (int i = 0; i < a0.length && i < a2.length; i++) {
                a2[i] = a0[i];
            }
            for (int i = 0; i < a0.length && i < a1.length; i++) {
                a1[i] = a0[i];
            }
            return a0;
!!!6800695.java!!!	stringArray(inout a0 : String, inout a1 : String, inout a2 : String) : String
            for (int i = 0; i < a0.length && i < a2.length; i++) {
                a2[i] = a0[i];
            }
            for (int i = 0; i < a0.length && i < a1.length; i++) {
                a1[i] = a0[i];
            }
            return a0;
!!!6800823.java!!!	parcelableArray(inout a0 : AidlTest::TestParcelable, inout a1 : AidlTest::TestParcelable, inout a2 : AidlTest::TestParcelable) : AidlTest::TestParcelable
            return null;
!!!6800951.java!!!	voidSecurityException() : void
            throw new SecurityException("gotcha!");
!!!6801079.java!!!	intSecurityException() : int
            throw new SecurityException("gotcha!");
