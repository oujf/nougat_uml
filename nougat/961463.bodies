class NotificationStressTest
!!!27668535.java!!!	setUp() : void
        super.setUp();
        mDevice = UiDevice.getInstance(getInstrumentation());
        mContext = getInstrumentation().getContext();
        mNotificationManager = (NotificationManager) mContext.getSystemService(
                Context.NOTIFICATION_SERVICE);
        mDevice.setOrientationNatural();
        mNotificationManager.cancelAll();
!!!27668663.java!!!	tearDown() : void
        mDevice.unfreezeRotation();
        mNotificationManager.cancelAll();
        mDevice.waitForIdle();
        super.tearDown();
!!!27668791.java!!!	testNotificationStress() : void
        // Cancel one of every five notifications to vary load on notification manager
        if (mNotifyId % 5 == 4) {
            mNotificationManager.cancel(mNotifyId - 4);
        }
        sendNotification(mNotifyId++, "testNotificationStressNotify");
!!!27668919.java!!!	testNotificationsWithShadeStress() : void
        mDevice.openNotification();
        Thread.sleep(LONG_TIMEOUT);
        for (int j = 0; j < MAX_NOTIFCATIONS; j++) {
            sendNotification(mNotifyId++, "testNotificationStressNotify");
        }
        Thread.sleep(LONG_TIMEOUT);
        assertTrue(mNotificationManager.getActiveNotifications().length == MAX_NOTIFCATIONS);
        for (int j = 0; j < MAX_NOTIFCATIONS; j++) {
            mNotificationManager.cancel(--mNotifyId);
        }
        if (isLockScreen()) {
            fail("Notification stress test failed, back to lockscreen");
        }
!!!27669047.java!!!	sendNotification(in id : int, inout text : CharSequence) : void
        // Fill in arbitrary content
        Intent intent = new Intent(Intent.ACTION_VIEW);
        PendingIntent pendingIntent = PendingIntent.getActivity(mContext, 0, intent, 0);
        CharSequence title = text + " " + id;
        CharSequence subtitle = String.valueOf(System.currentTimeMillis());
        // Create "typical" notification with random icon
        Notification notification = new Notification.Builder(mContext)
                .setSmallIcon(ICONS[mRandom.nextInt(ICONS.length)])
                .setTicker(text)
                .setWhen(System.currentTimeMillis())
                .setContentTitle(title)
                .setContentText(subtitle)
                .setContentIntent(pendingIntent)
                .setPriority(Notification.PRIORITY_HIGH)
                .build();
        mNotificationManager.notify(id, notification);
        //update rate limit is 50 notifications/second.
        SystemClock.sleep(20);
!!!27669175.java!!!	isLockScreen() : boolean
        KeyguardManager myKM = (KeyguardManager) mContext
                .getSystemService(Context.KEYGUARD_SERVICE);
        if (myKM.inKeyguardRestrictedInputMode()) {
            return true;
        } else {
            return false;
        }
