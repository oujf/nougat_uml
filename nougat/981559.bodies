class SweepGradient
!!!27838519.java!!!	SweepGradient(in cx : float, in cy : float, inout colors : int, inout positions : float)
        if (colors.length < 2) {
            throw new IllegalArgumentException("needs >= 2 number of colors");
        }
        if (positions != null && colors.length != positions.length) {
            throw new IllegalArgumentException(
                        "color and position arrays must be of equal length");
        }
        mType = TYPE_COLORS_AND_POSITIONS;
        mCx = cx;
        mCy = cy;
        mColors = colors;
        mPositions = positions;
        init(nativeCreate1(cx, cy, colors, positions));
!!!27838647.java!!!	SweepGradient(in cx : float, in cy : float, in color0 : int, in color1 : int)
        mType = TYPE_COLOR_START_AND_COLOR_END;
        mCx = cx;
        mCy = cy;
        mColor0 = color0;
        mColor1 = color1;
        init(nativeCreate2(cx, cy, color0, color1));
!!!27838775.java!!!	copy() : Shader
        final SweepGradient copy;
        switch (mType) {
            case TYPE_COLORS_AND_POSITIONS:
                copy = new SweepGradient(mCx, mCy, mColors.clone(),
                        mPositions != null ? mPositions.clone() : null);
                break;
            case TYPE_COLOR_START_AND_COLOR_END:
                copy = new SweepGradient(mCx, mCy, mColor0, mColor1);
                break;
            default:
                throw new IllegalArgumentException("SweepGradient should be created with either " +
                        "colors and positions or start color and end color");
        }
        copyLocalMatrix(copy);
        return copy;
