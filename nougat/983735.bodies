class AnimatedStateListState
!!!27873591.java!!!	AnimatedStateListState(inout orig : AnimatedStateListDrawable::AnimatedStateListState, inout owner : AnimatedStateListDrawable, inout res : Resources)
            super(orig, owner, res);

            if (orig != null) {
                // Perform a shallow copy and rely on mutate() to deep-copy.
                mAnimThemeAttrs = orig.mAnimThemeAttrs;
                mTransitions = orig.mTransitions;
                mStateIds = orig.mStateIds;
            } else {
                mTransitions = new LongSparseLongArray();
                mStateIds = new SparseIntArray();
            }
!!!27873719.java!!!	mutate() : void
            mTransitions = mTransitions.clone();
            mStateIds = mStateIds.clone();
!!!27873847.java!!!	addTransition(in fromId : int, in toId : int, inout anim : Drawable, inout reversible : boolean) : int
            final int pos = super.addChild(anim);
            final long keyFromTo = generateTransitionKey(fromId, toId);
            long reversibleBit = 0;
            if (reversible) {
                reversibleBit = REVERSIBLE_FLAG_BIT;
            }
            mTransitions.append(keyFromTo, pos | reversibleBit);

            if (reversible) {
                final long keyToFrom = generateTransitionKey(toId, fromId);
                mTransitions.append(keyToFrom, pos | REVERSED_BIT | reversibleBit);
            }

            return pos;
!!!27873975.java!!!	addStateSet(inout stateSet : int, inout drawable : Drawable, in id : int) : int
            final int index = super.addStateSet(stateSet, drawable);
            mStateIds.put(index, id);
            return index;
!!!27874103.java!!!	indexOfKeyframe(inout stateSet : int) : int
            final int index = super.indexOfStateSet(stateSet);
            if (index >= 0) {
                return index;
            }

            return super.indexOfStateSet(StateSet.WILD_CARD);
!!!27874231.java!!!	getKeyframeIdAt(in index : int) : int
            return index < 0 ? 0 : mStateIds.get(index, 0);
!!!27874359.java!!!	indexOfTransition(in fromId : int, in toId : int) : int
            final long keyFromTo = generateTransitionKey(fromId, toId);
            return (int) mTransitions.get(keyFromTo, -1);
!!!27874487.java!!!	isTransitionReversed(in fromId : int, in toId : int) : boolean
            final long keyFromTo = generateTransitionKey(fromId, toId);
            return (mTransitions.get(keyFromTo, -1) & REVERSED_BIT) != 0;
!!!27874615.java!!!	transitionHasReversibleFlag(in fromId : int, in toId : int) : boolean
            final long keyFromTo = generateTransitionKey(fromId, toId);
            return (mTransitions.get(keyFromTo, -1) & REVERSIBLE_FLAG_BIT) != 0;
!!!27874743.java!!!	canApplyTheme() : boolean
            return mAnimThemeAttrs != null || super.canApplyTheme();
!!!27874871.java!!!	newDrawable() : Drawable
            return new AnimatedStateListDrawable(this, null);
!!!27874999.java!!!	newDrawable(inout res : Resources) : Drawable
            return new AnimatedStateListDrawable(this, res);
!!!27875127.java!!!	generateTransitionKey(in fromId : int, in toId : int) : long
            return (long) fromId << 32 | toId;
