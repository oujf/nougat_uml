class PdfRenderer
!!!28016951.java!!!	PdfRenderer(inout input : ParcelFileDescriptor)
        if (input == null) {
            throw new NullPointerException("input cannot be null");
        }

        final long size;
        try {
            Libcore.os.lseek(input.getFileDescriptor(), 0, OsConstants.SEEK_SET);
            size = Libcore.os.fstat(input.getFileDescriptor()).st_size;
        } catch (ErrnoException ee) {
            throw new IllegalArgumentException("file descriptor not seekable");
        }

        mInput = input;
        mNativeDocument = nativeCreate(mInput.getFd(), size);
        mPageCount = nativeGetPageCount(mNativeDocument);
        mCloseGuard.open("close");
!!!28017079.java!!!	close() : void
        throwIfClosed();
        throwIfPageOpened();
        doClose();
!!!28017207.java!!!	getPageCount() : int
        throwIfClosed();
        return mPageCount;
!!!28017335.java!!!	shouldScaleForPrinting() : boolean
        throwIfClosed();
        return nativeScaleForPrinting(mNativeDocument);
!!!28017463.java!!!	openPage(in index : int) : PdfRenderer::Page
        throwIfClosed();
        throwIfPageOpened();
        throwIfPageNotInDocument(index);
        mCurrentPage = new Page(index);
        return mCurrentPage;
!!!28017591.java!!!	finalize() : void
        try {
            mCloseGuard.warnIfOpen();
            if (mInput != null) {
                doClose();
            }
        } finally {
            super.finalize();
        }
!!!28017719.java!!!	doClose() : void
        if (mCurrentPage != null) {
            mCurrentPage.close();
        }
        nativeClose(mNativeDocument);
        try {
            mInput.close();
        } catch (IOException ioe) {
            /* ignore - best effort */
        }
        mInput = null;
        mCloseGuard.close();
!!!28017847.java!!!	throwIfClosed() : void
        if (mInput == null) {
            throw new IllegalStateException("Already closed");
        }
!!!28017975.java!!!	throwIfPageOpened() : void
        if (mCurrentPage != null) {
            throw new IllegalStateException("Current page not closed");
        }
!!!28018103.java!!!	throwIfPageNotInDocument(in pageIndex : int) : void
        if (pageIndex < 0 || pageIndex >= mPageCount) {
            throw new IllegalArgumentException("Invalid page index");
        }
