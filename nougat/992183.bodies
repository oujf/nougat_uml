class Page
!!!28018231.java!!!	Page(in index : int)
            Point size = mTempPoint;
            mNativePage = nativeOpenPageAndGetSize(mNativeDocument, index, size);
            mIndex = index;
            mWidth = size.x;
            mHeight = size.y;
            mCloseGuard.open("close");
!!!28018359.java!!!	getIndex() : int
            return  mIndex;
!!!28018487.java!!!	getWidth() : int
            return mWidth;
!!!28018615.java!!!	getHeight() : int
            return mHeight;
!!!28018743.java!!!	render(inout destination : Bitmap, inout destClip : Rect, inout transform : Matrix, in renderMode : int) : void
            if (destination.getConfig() != Config.ARGB_8888) {
                throw new IllegalArgumentException("Unsupported pixel format");
            }

            if (destClip != null) {
                if (destClip.left < 0 || destClip.top < 0
                        || destClip.right > destination.getWidth()
                        || destClip.bottom > destination.getHeight()) {
                    throw new IllegalArgumentException("destBounds not in destination");
                }
            }

            if (transform != null && !transform.isAffine()) {
                 throw new IllegalArgumentException("transform not affine");
            }

            if (renderMode != RENDER_MODE_FOR_PRINT && renderMode != RENDER_MODE_FOR_DISPLAY) {
                throw new IllegalArgumentException("Unsupported render mode");
            }

            if (renderMode == RENDER_MODE_FOR_PRINT && renderMode == RENDER_MODE_FOR_DISPLAY) {
                throw new IllegalArgumentException("Only single render mode supported");
            }

            final int contentLeft = (destClip != null) ? destClip.left : 0;
            final int contentTop = (destClip != null) ? destClip.top : 0;
            final int contentRight = (destClip != null) ? destClip.right
                    : destination.getWidth();
            final int contentBottom = (destClip != null) ? destClip.bottom
                    : destination.getHeight();

            final long transformPtr = (transform != null) ? transform.native_instance : 0;

            nativeRenderPage(mNativeDocument, mNativePage, destination, contentLeft,
                    contentTop, contentRight, contentBottom, transformPtr, renderMode);
!!!28018871.java!!!	close() : void
            throwIfClosed();
            doClose();
!!!28018999.java!!!	finalize() : void
            try {
                mCloseGuard.warnIfOpen();
                if (mNativePage != 0) {
                    doClose();
                }
            } finally {
                super.finalize();
            }
!!!28019127.java!!!	doClose() : void
            nativeClosePage(mNativePage);
            mNativePage = 0;
            mCloseGuard.close();
            mCurrentPage = null;
!!!28019255.java!!!	throwIfClosed() : void
            if (mNativePage == 0) {
                throw new IllegalStateException("Already closed");
            }
