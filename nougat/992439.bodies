class PixelCopy
!!!28020407.java!!!	request(inout source : SurfaceView, inout dest : Bitmap, inout listener : PixelCopy::OnPixelCopyFinishedListener, inout listenerThread : Handler) : void
        request(source.getHolder().getSurface(), dest, listener, listenerThread);
!!!28020535.java!!!	request(inout source : Surface, inout dest : Bitmap, inout listener : PixelCopy::OnPixelCopyFinishedListener, inout listenerThread : Handler) : void
        validateBitmapDest(dest);
        if (!source.isValid()) {
            throw new IllegalArgumentException("Surface isn't valid, source.isValid() == false");
        }
        // TODO: Make this actually async and fast and cool and stuff
        int result = ThreadedRenderer.copySurfaceInto(source, dest);
        listenerThread.post(new Runnable() {
            @Override
            public void run() {
                listener.onPixelCopyFinished(result);
            }
        });
!!!28020663.java!!!	validateBitmapDest(inout bitmap : Bitmap) : void
        // TODO: Pre-check max texture dimens if we can
        if (bitmap == null) {
            throw new IllegalArgumentException("Bitmap cannot be null");
        }
        if (bitmap.isRecycled()) {
            throw new IllegalArgumentException("Bitmap is recycled");
        }
        if (!bitmap.isMutable()) {
            throw new IllegalArgumentException("Bitmap is immutable");
        }
