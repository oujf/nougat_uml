class GCM
!!!28057399.java!!!	GCM(in keymasterPadding : int)
            super(KeymasterDefs.KM_MODE_GCM, keymasterPadding);
!!!28057527.java!!!	resetAll() : void
            mTagLengthBits = DEFAULT_TAG_LENGTH_BITS;
            super.resetAll();
!!!28057655.java!!!	resetWhilePreservingInitState() : void
            super.resetWhilePreservingInitState();
!!!28057783.java!!!	initAlgorithmSpecificParameters() : void
            if (!isEncrypting()) {
                throw new InvalidKeyException("IV required when decrypting"
                        + ". Use IvParameterSpec or AlgorithmParameters to provide it.");
            }
!!!28057911.java!!!	initAlgorithmSpecificParameters(inout params : AlgorithmParameterSpec) : void
            // IV is used
            if (params == null) {
                if (!isEncrypting()) {
                    // IV must be provided by the caller
                    throw new InvalidAlgorithmParameterException(
                            "GCMParameterSpec must be provided when decrypting");
                }
                return;
            }
            if (!(params instanceof GCMParameterSpec)) {
                throw new InvalidAlgorithmParameterException("Only GCMParameterSpec supported");
            }
            GCMParameterSpec spec = (GCMParameterSpec) params;
            byte[] iv = spec.getIV();
            if (iv == null) {
                throw new InvalidAlgorithmParameterException("Null IV in GCMParameterSpec");
            } else if (iv.length != IV_LENGTH_BYTES) {
                throw new InvalidAlgorithmParameterException("Unsupported IV length: "
                        + iv.length + " bytes. Only " + IV_LENGTH_BYTES
                        + " bytes long IV supported");
            }
            int tagLengthBits = spec.getTLen();
            if ((tagLengthBits < MIN_SUPPORTED_TAG_LENGTH_BITS)
                    || (tagLengthBits > MAX_SUPPORTED_TAG_LENGTH_BITS)
                    || ((tagLengthBits % 8) != 0)) {
                throw new InvalidAlgorithmParameterException(
                        "Unsupported tag length: " + tagLengthBits + " bits"
                        + ". Supported lengths: 96, 104, 112, 120, 128");
            }
            setIv(iv);
            mTagLengthBits = tagLengthBits;
!!!28058039.java!!!	initAlgorithmSpecificParameters(inout params : AlgorithmParameters) : void
            if (params == null) {
                if (!isEncrypting()) {
                    // IV must be provided by the caller
                    throw new InvalidAlgorithmParameterException("IV required when decrypting"
                            + ". Use GCMParameterSpec or GCM AlgorithmParameters to provide it.");
                }
                return;
            }

            if (!"GCM".equalsIgnoreCase(params.getAlgorithm())) {
                throw new InvalidAlgorithmParameterException(
                        "Unsupported AlgorithmParameters algorithm: " + params.getAlgorithm()
                        + ". Supported: GCM");
            }

            GCMParameterSpec spec;
            try {
                spec = params.getParameterSpec(GCMParameterSpec.class);
            } catch (InvalidParameterSpecException e) {
                if (!isEncrypting()) {
                    // IV must be provided by the caller
                    throw new InvalidAlgorithmParameterException("IV and tag length required when"
                            + " decrypting, but not found in parameters: " + params, e);
                }
                setIv(null);
                return;
            }
            initAlgorithmSpecificParameters(spec);
!!!28058167.java!!!	engineGetParameters() : AlgorithmParameters
            byte[] iv = getIv();
            if ((iv != null) && (iv.length > 0)) {
                try {
                    AlgorithmParameters params = AlgorithmParameters.getInstance("GCM");
                    params.init(new GCMParameterSpec(mTagLengthBits, iv));
                    return params;
                } catch (NoSuchAlgorithmException e) {
                    throw new ProviderException(
                            "Failed to obtain GCM AlgorithmParameters", e);
                } catch (InvalidParameterSpecException e) {
                    throw new ProviderException(
                            "Failed to initialize GCM AlgorithmParameters", e);
                }
            }
            return null;
!!!28058295.java!!!	createMainDataStreamer(inout keyStore : KeyStore, inout operationToken : IBinder) : KeyStoreCryptoOperationStreamer
            KeyStoreCryptoOperationStreamer streamer = new KeyStoreCryptoOperationChunkedStreamer(
                    new KeyStoreCryptoOperationChunkedStreamer.MainDataStream(
                            keyStore, operationToken));
            if (isEncrypting()) {
                return streamer;
            } else {
                // When decrypting, to avoid leaking unauthenticated plaintext, do not return any
                // plaintext before ciphertext is authenticated by KeyStore.finish.
                return new BufferAllOutputUntilDoFinalStreamer(streamer);
            }
!!!28058423.java!!!	createAdditionalAuthenticationDataStreamer(inout keyStore : KeyStore, inout operationToken : IBinder) : KeyStoreCryptoOperationStreamer
            return new KeyStoreCryptoOperationChunkedStreamer(
                    new AdditionalAuthenticationDataStream(keyStore, operationToken));
!!!28058551.java!!!	getAdditionalEntropyAmountForBegin() : int
            if ((getIv() == null) && (isEncrypting())) {
                // IV will need to be generated
                return IV_LENGTH_BYTES;
            }

            return 0;
!!!28058679.java!!!	getAdditionalEntropyAmountForFinish() : int
            return 0;
!!!28058807.java!!!	addAlgorithmSpecificParametersToBegin(inout keymasterArgs : KeymasterArguments) : void
            super.addAlgorithmSpecificParametersToBegin(keymasterArgs);
            keymasterArgs.addUnsignedInt(KeymasterDefs.KM_TAG_MAC_LENGTH, mTagLengthBits);
!!!28058935.java!!!	getTagLengthBits() : int
            return mTagLengthBits;
